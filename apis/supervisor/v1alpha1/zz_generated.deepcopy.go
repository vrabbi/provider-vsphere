//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressCidrInitParameters) DeepCopyInto(out *EgressCidrInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressCidrInitParameters.
func (in *EgressCidrInitParameters) DeepCopy() *EgressCidrInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressCidrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressCidrObservation) DeepCopyInto(out *EgressCidrObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressCidrObservation.
func (in *EgressCidrObservation) DeepCopy() *EgressCidrObservation {
	if in == nil {
		return nil
	}
	out := new(EgressCidrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressCidrParameters) DeepCopyInto(out *EgressCidrParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressCidrParameters.
func (in *EgressCidrParameters) DeepCopy() *EgressCidrParameters {
	if in == nil {
		return nil
	}
	out := new(EgressCidrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressCidrInitParameters) DeepCopyInto(out *IngressCidrInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressCidrInitParameters.
func (in *IngressCidrInitParameters) DeepCopy() *IngressCidrInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressCidrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressCidrObservation) DeepCopyInto(out *IngressCidrObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressCidrObservation.
func (in *IngressCidrObservation) DeepCopy() *IngressCidrObservation {
	if in == nil {
		return nil
	}
	out := new(IngressCidrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressCidrParameters) DeepCopyInto(out *IngressCidrParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressCidrParameters.
func (in *IngressCidrParameters) DeepCopy() *IngressCidrParameters {
	if in == nil {
		return nil
	}
	out := new(IngressCidrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementNetworkInitParameters) DeepCopyInto(out *ManagementNetworkInitParameters) {
	*out = *in
	if in.AddressCount != nil {
		in, out := &in.AddressCount, &out.AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.StartingAddress != nil {
		in, out := &in.StartingAddress, &out.StartingAddress
		*out = new(string)
		**out = **in
	}
	if in.SubnetMask != nil {
		in, out := &in.SubnetMask, &out.SubnetMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementNetworkInitParameters.
func (in *ManagementNetworkInitParameters) DeepCopy() *ManagementNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementNetworkObservation) DeepCopyInto(out *ManagementNetworkObservation) {
	*out = *in
	if in.AddressCount != nil {
		in, out := &in.AddressCount, &out.AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.StartingAddress != nil {
		in, out := &in.StartingAddress, &out.StartingAddress
		*out = new(string)
		**out = **in
	}
	if in.SubnetMask != nil {
		in, out := &in.SubnetMask, &out.SubnetMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementNetworkObservation.
func (in *ManagementNetworkObservation) DeepCopy() *ManagementNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(ManagementNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementNetworkParameters) DeepCopyInto(out *ManagementNetworkParameters) {
	*out = *in
	if in.AddressCount != nil {
		in, out := &in.AddressCount, &out.AddressCount
		*out = new(float64)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.StartingAddress != nil {
		in, out := &in.StartingAddress, &out.StartingAddress
		*out = new(string)
		**out = **in
	}
	if in.SubnetMask != nil {
		in, out := &in.SubnetMask, &out.SubnetMask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementNetworkParameters.
func (in *ManagementNetworkParameters) DeepCopy() *ManagementNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceInitParameters) DeepCopyInto(out *NamespaceInitParameters) {
	*out = *in
	if in.ContentLibraries != nil {
		in, out := &in.ContentLibraries, &out.ContentLibraries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VMClasses != nil {
		in, out := &in.VMClasses, &out.VMClasses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceInitParameters.
func (in *NamespaceInitParameters) DeepCopy() *NamespaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceObservation) DeepCopyInto(out *NamespaceObservation) {
	*out = *in
	if in.ContentLibraries != nil {
		in, out := &in.ContentLibraries, &out.ContentLibraries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VMClasses != nil {
		in, out := &in.VMClasses, &out.VMClasses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceObservation.
func (in *NamespaceObservation) DeepCopy() *NamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(NamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceParameters) DeepCopyInto(out *NamespaceParameters) {
	*out = *in
	if in.ContentLibraries != nil {
		in, out := &in.ContentLibraries, &out.ContentLibraries
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VMClasses != nil {
		in, out := &in.VMClasses, &out.VMClasses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceParameters.
func (in *NamespaceParameters) DeepCopy() *NamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(NamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodCidrInitParameters) DeepCopyInto(out *PodCidrInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodCidrInitParameters.
func (in *PodCidrInitParameters) DeepCopy() *PodCidrInitParameters {
	if in == nil {
		return nil
	}
	out := new(PodCidrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodCidrObservation) DeepCopyInto(out *PodCidrObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodCidrObservation.
func (in *PodCidrObservation) DeepCopy() *PodCidrObservation {
	if in == nil {
		return nil
	}
	out := new(PodCidrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodCidrParameters) DeepCopyInto(out *PodCidrParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodCidrParameters.
func (in *PodCidrParameters) DeepCopy() *PodCidrParameters {
	if in == nil {
		return nil
	}
	out := new(PodCidrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCidrInitParameters) DeepCopyInto(out *ServiceCidrInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCidrInitParameters.
func (in *ServiceCidrInitParameters) DeepCopy() *ServiceCidrInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceCidrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCidrObservation) DeepCopyInto(out *ServiceCidrObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCidrObservation.
func (in *ServiceCidrObservation) DeepCopy() *ServiceCidrObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceCidrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCidrParameters) DeepCopyInto(out *ServiceCidrParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCidrParameters.
func (in *ServiceCidrParameters) DeepCopy() *ServiceCidrParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceCidrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereSupervisor) DeepCopyInto(out *VSphereSupervisor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereSupervisor.
func (in *VSphereSupervisor) DeepCopy() *VSphereSupervisor {
	if in == nil {
		return nil
	}
	out := new(VSphereSupervisor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereSupervisor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereSupervisorInitParameters) DeepCopyInto(out *VSphereSupervisorInitParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.ContentLibrary != nil {
		in, out := &in.ContentLibrary, &out.ContentLibrary
		*out = new(string)
		**out = **in
	}
	if in.DvsUUID != nil {
		in, out := &in.DvsUUID, &out.DvsUUID
		*out = new(string)
		**out = **in
	}
	if in.EdgeCluster != nil {
		in, out := &in.EdgeCluster, &out.EdgeCluster
		*out = new(string)
		**out = **in
	}
	if in.EgressCidr != nil {
		in, out := &in.EgressCidr, &out.EgressCidr
		*out = make([]EgressCidrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IngressCidr != nil {
		in, out := &in.IngressCidr, &out.IngressCidr
		*out = make([]IngressCidrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainDNS != nil {
		in, out := &in.MainDNS, &out.MainDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ManagementNetwork != nil {
		in, out := &in.ManagementNetwork, &out.ManagementNetwork
		*out = make([]ManagementNetworkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = make([]PodCidrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchDomains != nil {
		in, out := &in.SearchDomains, &out.SearchDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = make([]ServiceCidrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SizingHint != nil {
		in, out := &in.SizingHint, &out.SizingHint
		*out = new(string)
		**out = **in
	}
	if in.StoragePolicy != nil {
		in, out := &in.StoragePolicy, &out.StoragePolicy
		*out = new(string)
		**out = **in
	}
	if in.WorkerDNS != nil {
		in, out := &in.WorkerDNS, &out.WorkerDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereSupervisorInitParameters.
func (in *VSphereSupervisorInitParameters) DeepCopy() *VSphereSupervisorInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereSupervisorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereSupervisorList) DeepCopyInto(out *VSphereSupervisorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereSupervisor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereSupervisorList.
func (in *VSphereSupervisorList) DeepCopy() *VSphereSupervisorList {
	if in == nil {
		return nil
	}
	out := new(VSphereSupervisorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereSupervisorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereSupervisorObservation) DeepCopyInto(out *VSphereSupervisorObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.ContentLibrary != nil {
		in, out := &in.ContentLibrary, &out.ContentLibrary
		*out = new(string)
		**out = **in
	}
	if in.DvsUUID != nil {
		in, out := &in.DvsUUID, &out.DvsUUID
		*out = new(string)
		**out = **in
	}
	if in.EdgeCluster != nil {
		in, out := &in.EdgeCluster, &out.EdgeCluster
		*out = new(string)
		**out = **in
	}
	if in.EgressCidr != nil {
		in, out := &in.EgressCidr, &out.EgressCidr
		*out = make([]EgressCidrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IngressCidr != nil {
		in, out := &in.IngressCidr, &out.IngressCidr
		*out = make([]IngressCidrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainDNS != nil {
		in, out := &in.MainDNS, &out.MainDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ManagementNetwork != nil {
		in, out := &in.ManagementNetwork, &out.ManagementNetwork
		*out = make([]ManagementNetworkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = make([]PodCidrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchDomains != nil {
		in, out := &in.SearchDomains, &out.SearchDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = make([]ServiceCidrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SizingHint != nil {
		in, out := &in.SizingHint, &out.SizingHint
		*out = new(string)
		**out = **in
	}
	if in.StoragePolicy != nil {
		in, out := &in.StoragePolicy, &out.StoragePolicy
		*out = new(string)
		**out = **in
	}
	if in.WorkerDNS != nil {
		in, out := &in.WorkerDNS, &out.WorkerDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereSupervisorObservation.
func (in *VSphereSupervisorObservation) DeepCopy() *VSphereSupervisorObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereSupervisorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereSupervisorParameters) DeepCopyInto(out *VSphereSupervisorParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.ContentLibrary != nil {
		in, out := &in.ContentLibrary, &out.ContentLibrary
		*out = new(string)
		**out = **in
	}
	if in.DvsUUID != nil {
		in, out := &in.DvsUUID, &out.DvsUUID
		*out = new(string)
		**out = **in
	}
	if in.EdgeCluster != nil {
		in, out := &in.EdgeCluster, &out.EdgeCluster
		*out = new(string)
		**out = **in
	}
	if in.EgressCidr != nil {
		in, out := &in.EgressCidr, &out.EgressCidr
		*out = make([]EgressCidrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IngressCidr != nil {
		in, out := &in.IngressCidr, &out.IngressCidr
		*out = make([]IngressCidrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MainDNS != nil {
		in, out := &in.MainDNS, &out.MainDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ManagementNetwork != nil {
		in, out := &in.ManagementNetwork, &out.ManagementNetwork
		*out = make([]ManagementNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make([]NamespaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = make([]PodCidrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchDomains != nil {
		in, out := &in.SearchDomains, &out.SearchDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = make([]ServiceCidrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SizingHint != nil {
		in, out := &in.SizingHint, &out.SizingHint
		*out = new(string)
		**out = **in
	}
	if in.StoragePolicy != nil {
		in, out := &in.StoragePolicy, &out.StoragePolicy
		*out = new(string)
		**out = **in
	}
	if in.WorkerDNS != nil {
		in, out := &in.WorkerDNS, &out.WorkerDNS
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereSupervisorParameters.
func (in *VSphereSupervisorParameters) DeepCopy() *VSphereSupervisorParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereSupervisorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereSupervisorSpec) DeepCopyInto(out *VSphereSupervisorSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereSupervisorSpec.
func (in *VSphereSupervisorSpec) DeepCopy() *VSphereSupervisorSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereSupervisorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereSupervisorStatus) DeepCopyInto(out *VSphereSupervisorStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereSupervisorStatus.
func (in *VSphereSupervisorStatus) DeepCopy() *VSphereSupervisorStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereSupervisorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVirtualMachineClass) DeepCopyInto(out *VSphereVirtualMachineClass) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVirtualMachineClass.
func (in *VSphereVirtualMachineClass) DeepCopy() *VSphereVirtualMachineClass {
	if in == nil {
		return nil
	}
	out := new(VSphereVirtualMachineClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereVirtualMachineClass) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVirtualMachineClassInitParameters) DeepCopyInto(out *VSphereVirtualMachineClassInitParameters) {
	*out = *in
	if in.CPUReservation != nil {
		in, out := &in.CPUReservation, &out.CPUReservation
		*out = new(float64)
		**out = **in
	}
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(float64)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VgpuDevices != nil {
		in, out := &in.VgpuDevices, &out.VgpuDevices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVirtualMachineClassInitParameters.
func (in *VSphereVirtualMachineClassInitParameters) DeepCopy() *VSphereVirtualMachineClassInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereVirtualMachineClassInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVirtualMachineClassList) DeepCopyInto(out *VSphereVirtualMachineClassList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereVirtualMachineClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVirtualMachineClassList.
func (in *VSphereVirtualMachineClassList) DeepCopy() *VSphereVirtualMachineClassList {
	if in == nil {
		return nil
	}
	out := new(VSphereVirtualMachineClassList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereVirtualMachineClassList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVirtualMachineClassObservation) DeepCopyInto(out *VSphereVirtualMachineClassObservation) {
	*out = *in
	if in.CPUReservation != nil {
		in, out := &in.CPUReservation, &out.CPUReservation
		*out = new(float64)
		**out = **in
	}
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VgpuDevices != nil {
		in, out := &in.VgpuDevices, &out.VgpuDevices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVirtualMachineClassObservation.
func (in *VSphereVirtualMachineClassObservation) DeepCopy() *VSphereVirtualMachineClassObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereVirtualMachineClassObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVirtualMachineClassParameters) DeepCopyInto(out *VSphereVirtualMachineClassParameters) {
	*out = *in
	if in.CPUReservation != nil {
		in, out := &in.CPUReservation, &out.CPUReservation
		*out = new(float64)
		**out = **in
	}
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(float64)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VgpuDevices != nil {
		in, out := &in.VgpuDevices, &out.VgpuDevices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVirtualMachineClassParameters.
func (in *VSphereVirtualMachineClassParameters) DeepCopy() *VSphereVirtualMachineClassParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereVirtualMachineClassParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVirtualMachineClassSpec) DeepCopyInto(out *VSphereVirtualMachineClassSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVirtualMachineClassSpec.
func (in *VSphereVirtualMachineClassSpec) DeepCopy() *VSphereVirtualMachineClassSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereVirtualMachineClassSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVirtualMachineClassStatus) DeepCopyInto(out *VSphereVirtualMachineClassStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVirtualMachineClassStatus.
func (in *VSphereVirtualMachineClassStatus) DeepCopy() *VSphereVirtualMachineClassStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereVirtualMachineClassStatus)
	in.DeepCopyInto(out)
	return out
}
