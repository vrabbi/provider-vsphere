//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagRulesInitParameters) DeepCopyInto(out *TagRulesInitParameters) {
	*out = *in
	if in.IncludeDatastoresWithTags != nil {
		in, out := &in.IncludeDatastoresWithTags, &out.IncludeDatastoresWithTags
		*out = new(bool)
		**out = **in
	}
	if in.TagCategory != nil {
		in, out := &in.TagCategory, &out.TagCategory
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagRulesInitParameters.
func (in *TagRulesInitParameters) DeepCopy() *TagRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagRulesObservation) DeepCopyInto(out *TagRulesObservation) {
	*out = *in
	if in.IncludeDatastoresWithTags != nil {
		in, out := &in.IncludeDatastoresWithTags, &out.IncludeDatastoresWithTags
		*out = new(bool)
		**out = **in
	}
	if in.TagCategory != nil {
		in, out := &in.TagCategory, &out.TagCategory
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagRulesObservation.
func (in *TagRulesObservation) DeepCopy() *TagRulesObservation {
	if in == nil {
		return nil
	}
	out := new(TagRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagRulesParameters) DeepCopyInto(out *TagRulesParameters) {
	*out = *in
	if in.IncludeDatastoresWithTags != nil {
		in, out := &in.IncludeDatastoresWithTags, &out.IncludeDatastoresWithTags
		*out = new(bool)
		**out = **in
	}
	if in.TagCategory != nil {
		in, out := &in.TagCategory, &out.TagCategory
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagRulesParameters.
func (in *TagRulesParameters) DeepCopy() *TagRulesParameters {
	if in == nil {
		return nil
	}
	out := new(TagRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreCluster) DeepCopyInto(out *VSphereDatastoreCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreCluster.
func (in *VSphereDatastoreCluster) DeepCopy() *VSphereDatastoreCluster {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereDatastoreCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterInitParameters) DeepCopyInto(out *VSphereDatastoreClusterInitParameters) {
	*out = *in
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SdrsAdvancedOptions != nil {
		in, out := &in.SdrsAdvancedOptions, &out.SdrsAdvancedOptions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SdrsAutomationLevel != nil {
		in, out := &in.SdrsAutomationLevel, &out.SdrsAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsDefaultIntraVMAffinity != nil {
		in, out := &in.SdrsDefaultIntraVMAffinity, &out.SdrsDefaultIntraVMAffinity
		*out = new(bool)
		**out = **in
	}
	if in.SdrsEnabled != nil {
		in, out := &in.SdrsEnabled, &out.SdrsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SdrsFreeSpaceThreshold != nil {
		in, out := &in.SdrsFreeSpaceThreshold, &out.SdrsFreeSpaceThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsFreeSpaceThresholdMode != nil {
		in, out := &in.SdrsFreeSpaceThresholdMode, &out.SdrsFreeSpaceThresholdMode
		*out = new(string)
		**out = **in
	}
	if in.SdrsFreeSpaceUtilizationDifference != nil {
		in, out := &in.SdrsFreeSpaceUtilizationDifference, &out.SdrsFreeSpaceUtilizationDifference
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoBalanceAutomationLevel != nil {
		in, out := &in.SdrsIoBalanceAutomationLevel, &out.SdrsIoBalanceAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsIoLatencyThreshold != nil {
		in, out := &in.SdrsIoLatencyThreshold, &out.SdrsIoLatencyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoLoadBalanceEnabled != nil {
		in, out := &in.SdrsIoLoadBalanceEnabled, &out.SdrsIoLoadBalanceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SdrsIoLoadImbalanceThreshold != nil {
		in, out := &in.SdrsIoLoadImbalanceThreshold, &out.SdrsIoLoadImbalanceThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservableIopsThreshold != nil {
		in, out := &in.SdrsIoReservableIopsThreshold, &out.SdrsIoReservableIopsThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservablePercentThreshold != nil {
		in, out := &in.SdrsIoReservablePercentThreshold, &out.SdrsIoReservablePercentThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservableThresholdMode != nil {
		in, out := &in.SdrsIoReservableThresholdMode, &out.SdrsIoReservableThresholdMode
		*out = new(string)
		**out = **in
	}
	if in.SdrsLoadBalanceInterval != nil {
		in, out := &in.SdrsLoadBalanceInterval, &out.SdrsLoadBalanceInterval
		*out = new(float64)
		**out = **in
	}
	if in.SdrsPolicyEnforcementAutomationLevel != nil {
		in, out := &in.SdrsPolicyEnforcementAutomationLevel, &out.SdrsPolicyEnforcementAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsRuleEnforcementAutomationLevel != nil {
		in, out := &in.SdrsRuleEnforcementAutomationLevel, &out.SdrsRuleEnforcementAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsSpaceBalanceAutomationLevel != nil {
		in, out := &in.SdrsSpaceBalanceAutomationLevel, &out.SdrsSpaceBalanceAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsSpaceUtilizationThreshold != nil {
		in, out := &in.SdrsSpaceUtilizationThreshold, &out.SdrsSpaceUtilizationThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsVMEvacuationAutomationLevel != nil {
		in, out := &in.SdrsVMEvacuationAutomationLevel, &out.SdrsVMEvacuationAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterInitParameters.
func (in *VSphereDatastoreClusterInitParameters) DeepCopy() *VSphereDatastoreClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterList) DeepCopyInto(out *VSphereDatastoreClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereDatastoreCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterList.
func (in *VSphereDatastoreClusterList) DeepCopy() *VSphereDatastoreClusterList {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereDatastoreClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterObservation) DeepCopyInto(out *VSphereDatastoreClusterObservation) {
	*out = *in
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SdrsAdvancedOptions != nil {
		in, out := &in.SdrsAdvancedOptions, &out.SdrsAdvancedOptions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SdrsAutomationLevel != nil {
		in, out := &in.SdrsAutomationLevel, &out.SdrsAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsDefaultIntraVMAffinity != nil {
		in, out := &in.SdrsDefaultIntraVMAffinity, &out.SdrsDefaultIntraVMAffinity
		*out = new(bool)
		**out = **in
	}
	if in.SdrsEnabled != nil {
		in, out := &in.SdrsEnabled, &out.SdrsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SdrsFreeSpaceThreshold != nil {
		in, out := &in.SdrsFreeSpaceThreshold, &out.SdrsFreeSpaceThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsFreeSpaceThresholdMode != nil {
		in, out := &in.SdrsFreeSpaceThresholdMode, &out.SdrsFreeSpaceThresholdMode
		*out = new(string)
		**out = **in
	}
	if in.SdrsFreeSpaceUtilizationDifference != nil {
		in, out := &in.SdrsFreeSpaceUtilizationDifference, &out.SdrsFreeSpaceUtilizationDifference
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoBalanceAutomationLevel != nil {
		in, out := &in.SdrsIoBalanceAutomationLevel, &out.SdrsIoBalanceAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsIoLatencyThreshold != nil {
		in, out := &in.SdrsIoLatencyThreshold, &out.SdrsIoLatencyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoLoadBalanceEnabled != nil {
		in, out := &in.SdrsIoLoadBalanceEnabled, &out.SdrsIoLoadBalanceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SdrsIoLoadImbalanceThreshold != nil {
		in, out := &in.SdrsIoLoadImbalanceThreshold, &out.SdrsIoLoadImbalanceThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservableIopsThreshold != nil {
		in, out := &in.SdrsIoReservableIopsThreshold, &out.SdrsIoReservableIopsThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservablePercentThreshold != nil {
		in, out := &in.SdrsIoReservablePercentThreshold, &out.SdrsIoReservablePercentThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservableThresholdMode != nil {
		in, out := &in.SdrsIoReservableThresholdMode, &out.SdrsIoReservableThresholdMode
		*out = new(string)
		**out = **in
	}
	if in.SdrsLoadBalanceInterval != nil {
		in, out := &in.SdrsLoadBalanceInterval, &out.SdrsLoadBalanceInterval
		*out = new(float64)
		**out = **in
	}
	if in.SdrsPolicyEnforcementAutomationLevel != nil {
		in, out := &in.SdrsPolicyEnforcementAutomationLevel, &out.SdrsPolicyEnforcementAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsRuleEnforcementAutomationLevel != nil {
		in, out := &in.SdrsRuleEnforcementAutomationLevel, &out.SdrsRuleEnforcementAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsSpaceBalanceAutomationLevel != nil {
		in, out := &in.SdrsSpaceBalanceAutomationLevel, &out.SdrsSpaceBalanceAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsSpaceUtilizationThreshold != nil {
		in, out := &in.SdrsSpaceUtilizationThreshold, &out.SdrsSpaceUtilizationThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsVMEvacuationAutomationLevel != nil {
		in, out := &in.SdrsVMEvacuationAutomationLevel, &out.SdrsVMEvacuationAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterObservation.
func (in *VSphereDatastoreClusterObservation) DeepCopy() *VSphereDatastoreClusterObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterParameters) DeepCopyInto(out *VSphereDatastoreClusterParameters) {
	*out = *in
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SdrsAdvancedOptions != nil {
		in, out := &in.SdrsAdvancedOptions, &out.SdrsAdvancedOptions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SdrsAutomationLevel != nil {
		in, out := &in.SdrsAutomationLevel, &out.SdrsAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsDefaultIntraVMAffinity != nil {
		in, out := &in.SdrsDefaultIntraVMAffinity, &out.SdrsDefaultIntraVMAffinity
		*out = new(bool)
		**out = **in
	}
	if in.SdrsEnabled != nil {
		in, out := &in.SdrsEnabled, &out.SdrsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SdrsFreeSpaceThreshold != nil {
		in, out := &in.SdrsFreeSpaceThreshold, &out.SdrsFreeSpaceThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsFreeSpaceThresholdMode != nil {
		in, out := &in.SdrsFreeSpaceThresholdMode, &out.SdrsFreeSpaceThresholdMode
		*out = new(string)
		**out = **in
	}
	if in.SdrsFreeSpaceUtilizationDifference != nil {
		in, out := &in.SdrsFreeSpaceUtilizationDifference, &out.SdrsFreeSpaceUtilizationDifference
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoBalanceAutomationLevel != nil {
		in, out := &in.SdrsIoBalanceAutomationLevel, &out.SdrsIoBalanceAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsIoLatencyThreshold != nil {
		in, out := &in.SdrsIoLatencyThreshold, &out.SdrsIoLatencyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoLoadBalanceEnabled != nil {
		in, out := &in.SdrsIoLoadBalanceEnabled, &out.SdrsIoLoadBalanceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SdrsIoLoadImbalanceThreshold != nil {
		in, out := &in.SdrsIoLoadImbalanceThreshold, &out.SdrsIoLoadImbalanceThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservableIopsThreshold != nil {
		in, out := &in.SdrsIoReservableIopsThreshold, &out.SdrsIoReservableIopsThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservablePercentThreshold != nil {
		in, out := &in.SdrsIoReservablePercentThreshold, &out.SdrsIoReservablePercentThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsIoReservableThresholdMode != nil {
		in, out := &in.SdrsIoReservableThresholdMode, &out.SdrsIoReservableThresholdMode
		*out = new(string)
		**out = **in
	}
	if in.SdrsLoadBalanceInterval != nil {
		in, out := &in.SdrsLoadBalanceInterval, &out.SdrsLoadBalanceInterval
		*out = new(float64)
		**out = **in
	}
	if in.SdrsPolicyEnforcementAutomationLevel != nil {
		in, out := &in.SdrsPolicyEnforcementAutomationLevel, &out.SdrsPolicyEnforcementAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsRuleEnforcementAutomationLevel != nil {
		in, out := &in.SdrsRuleEnforcementAutomationLevel, &out.SdrsRuleEnforcementAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsSpaceBalanceAutomationLevel != nil {
		in, out := &in.SdrsSpaceBalanceAutomationLevel, &out.SdrsSpaceBalanceAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsSpaceUtilizationThreshold != nil {
		in, out := &in.SdrsSpaceUtilizationThreshold, &out.SdrsSpaceUtilizationThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SdrsVMEvacuationAutomationLevel != nil {
		in, out := &in.SdrsVMEvacuationAutomationLevel, &out.SdrsVMEvacuationAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterParameters.
func (in *VSphereDatastoreClusterParameters) DeepCopy() *VSphereDatastoreClusterParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterSpec) DeepCopyInto(out *VSphereDatastoreClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterSpec.
func (in *VSphereDatastoreClusterSpec) DeepCopy() *VSphereDatastoreClusterSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterStatus) DeepCopyInto(out *VSphereDatastoreClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterStatus.
func (in *VSphereDatastoreClusterStatus) DeepCopy() *VSphereDatastoreClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterVmAntiAffinityRule) DeepCopyInto(out *VSphereDatastoreClusterVmAntiAffinityRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterVmAntiAffinityRule.
func (in *VSphereDatastoreClusterVmAntiAffinityRule) DeepCopy() *VSphereDatastoreClusterVmAntiAffinityRule {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterVmAntiAffinityRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereDatastoreClusterVmAntiAffinityRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleInitParameters) DeepCopyInto(out *VSphereDatastoreClusterVmAntiAffinityRuleInitParameters) {
	*out = *in
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Mandatory != nil {
		in, out := &in.Mandatory, &out.Mandatory
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineIds != nil {
		in, out := &in.VirtualMachineIds, &out.VirtualMachineIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterVmAntiAffinityRuleInitParameters.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleInitParameters) DeepCopy() *VSphereDatastoreClusterVmAntiAffinityRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterVmAntiAffinityRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleList) DeepCopyInto(out *VSphereDatastoreClusterVmAntiAffinityRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereDatastoreClusterVmAntiAffinityRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterVmAntiAffinityRuleList.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleList) DeepCopy() *VSphereDatastoreClusterVmAntiAffinityRuleList {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterVmAntiAffinityRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleObservation) DeepCopyInto(out *VSphereDatastoreClusterVmAntiAffinityRuleObservation) {
	*out = *in
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Mandatory != nil {
		in, out := &in.Mandatory, &out.Mandatory
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineIds != nil {
		in, out := &in.VirtualMachineIds, &out.VirtualMachineIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterVmAntiAffinityRuleObservation.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleObservation) DeepCopy() *VSphereDatastoreClusterVmAntiAffinityRuleObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterVmAntiAffinityRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleParameters) DeepCopyInto(out *VSphereDatastoreClusterVmAntiAffinityRuleParameters) {
	*out = *in
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Mandatory != nil {
		in, out := &in.Mandatory, &out.Mandatory
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineIds != nil {
		in, out := &in.VirtualMachineIds, &out.VirtualMachineIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterVmAntiAffinityRuleParameters.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleParameters) DeepCopy() *VSphereDatastoreClusterVmAntiAffinityRuleParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterVmAntiAffinityRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleSpec) DeepCopyInto(out *VSphereDatastoreClusterVmAntiAffinityRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterVmAntiAffinityRuleSpec.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleSpec) DeepCopy() *VSphereDatastoreClusterVmAntiAffinityRuleSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterVmAntiAffinityRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleStatus) DeepCopyInto(out *VSphereDatastoreClusterVmAntiAffinityRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereDatastoreClusterVmAntiAffinityRuleStatus.
func (in *VSphereDatastoreClusterVmAntiAffinityRuleStatus) DeepCopy() *VSphereDatastoreClusterVmAntiAffinityRuleStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereDatastoreClusterVmAntiAffinityRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereFile) DeepCopyInto(out *VSphereFile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereFile.
func (in *VSphereFile) DeepCopy() *VSphereFile {
	if in == nil {
		return nil
	}
	out := new(VSphereFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereFile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereFileInitParameters) DeepCopyInto(out *VSphereFileInitParameters) {
	*out = *in
	if in.CreateDirectories != nil {
		in, out := &in.CreateDirectories, &out.CreateDirectories
		*out = new(bool)
		**out = **in
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.DestinationFile != nil {
		in, out := &in.DestinationFile, &out.DestinationFile
		*out = new(string)
		**out = **in
	}
	if in.SourceDatacenter != nil {
		in, out := &in.SourceDatacenter, &out.SourceDatacenter
		*out = new(string)
		**out = **in
	}
	if in.SourceDatastore != nil {
		in, out := &in.SourceDatastore, &out.SourceDatastore
		*out = new(string)
		**out = **in
	}
	if in.SourceFile != nil {
		in, out := &in.SourceFile, &out.SourceFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereFileInitParameters.
func (in *VSphereFileInitParameters) DeepCopy() *VSphereFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereFileList) DeepCopyInto(out *VSphereFileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereFile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereFileList.
func (in *VSphereFileList) DeepCopy() *VSphereFileList {
	if in == nil {
		return nil
	}
	out := new(VSphereFileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereFileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereFileObservation) DeepCopyInto(out *VSphereFileObservation) {
	*out = *in
	if in.CreateDirectories != nil {
		in, out := &in.CreateDirectories, &out.CreateDirectories
		*out = new(bool)
		**out = **in
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.DestinationFile != nil {
		in, out := &in.DestinationFile, &out.DestinationFile
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SourceDatacenter != nil {
		in, out := &in.SourceDatacenter, &out.SourceDatacenter
		*out = new(string)
		**out = **in
	}
	if in.SourceDatastore != nil {
		in, out := &in.SourceDatastore, &out.SourceDatastore
		*out = new(string)
		**out = **in
	}
	if in.SourceFile != nil {
		in, out := &in.SourceFile, &out.SourceFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereFileObservation.
func (in *VSphereFileObservation) DeepCopy() *VSphereFileObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereFileParameters) DeepCopyInto(out *VSphereFileParameters) {
	*out = *in
	if in.CreateDirectories != nil {
		in, out := &in.CreateDirectories, &out.CreateDirectories
		*out = new(bool)
		**out = **in
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.DestinationFile != nil {
		in, out := &in.DestinationFile, &out.DestinationFile
		*out = new(string)
		**out = **in
	}
	if in.SourceDatacenter != nil {
		in, out := &in.SourceDatacenter, &out.SourceDatacenter
		*out = new(string)
		**out = **in
	}
	if in.SourceDatastore != nil {
		in, out := &in.SourceDatastore, &out.SourceDatastore
		*out = new(string)
		**out = **in
	}
	if in.SourceFile != nil {
		in, out := &in.SourceFile, &out.SourceFile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereFileParameters.
func (in *VSphereFileParameters) DeepCopy() *VSphereFileParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereFileSpec) DeepCopyInto(out *VSphereFileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereFileSpec.
func (in *VSphereFileSpec) DeepCopy() *VSphereFileSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereFileStatus) DeepCopyInto(out *VSphereFileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereFileStatus.
func (in *VSphereFileStatus) DeepCopy() *VSphereFileStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereFileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereNasDatastore) DeepCopyInto(out *VSphereNasDatastore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereNasDatastore.
func (in *VSphereNasDatastore) DeepCopy() *VSphereNasDatastore {
	if in == nil {
		return nil
	}
	out := new(VSphereNasDatastore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereNasDatastore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereNasDatastoreInitParameters) DeepCopyInto(out *VSphereNasDatastoreInitParameters) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = new(string)
		**out = **in
	}
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HostSystemIds != nil {
		in, out := &in.HostSystemIds, &out.HostSystemIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RemoteHosts != nil {
		in, out := &in.RemoteHosts, &out.RemoteHosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RemotePath != nil {
		in, out := &in.RemotePath, &out.RemotePath
		*out = new(string)
		**out = **in
	}
	if in.SecurityType != nil {
		in, out := &in.SecurityType, &out.SecurityType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereNasDatastoreInitParameters.
func (in *VSphereNasDatastoreInitParameters) DeepCopy() *VSphereNasDatastoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereNasDatastoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereNasDatastoreList) DeepCopyInto(out *VSphereNasDatastoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereNasDatastore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereNasDatastoreList.
func (in *VSphereNasDatastoreList) DeepCopy() *VSphereNasDatastoreList {
	if in == nil {
		return nil
	}
	out := new(VSphereNasDatastoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereNasDatastoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereNasDatastoreObservation) DeepCopyInto(out *VSphereNasDatastoreObservation) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = new(string)
		**out = **in
	}
	if in.Accessible != nil {
		in, out := &in.Accessible, &out.Accessible
		*out = new(bool)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.FreeSpace != nil {
		in, out := &in.FreeSpace, &out.FreeSpace
		*out = new(float64)
		**out = **in
	}
	if in.HostSystemIds != nil {
		in, out := &in.HostSystemIds, &out.HostSystemIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceMode != nil {
		in, out := &in.MaintenanceMode, &out.MaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.MultipleHostAccess != nil {
		in, out := &in.MultipleHostAccess, &out.MultipleHostAccess
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProtocolEndpoint != nil {
		in, out := &in.ProtocolEndpoint, &out.ProtocolEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.RemoteHosts != nil {
		in, out := &in.RemoteHosts, &out.RemoteHosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RemotePath != nil {
		in, out := &in.RemotePath, &out.RemotePath
		*out = new(string)
		**out = **in
	}
	if in.SecurityType != nil {
		in, out := &in.SecurityType, &out.SecurityType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UncommittedSpace != nil {
		in, out := &in.UncommittedSpace, &out.UncommittedSpace
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereNasDatastoreObservation.
func (in *VSphereNasDatastoreObservation) DeepCopy() *VSphereNasDatastoreObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereNasDatastoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereNasDatastoreParameters) DeepCopyInto(out *VSphereNasDatastoreParameters) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = new(string)
		**out = **in
	}
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HostSystemIds != nil {
		in, out := &in.HostSystemIds, &out.HostSystemIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RemoteHosts != nil {
		in, out := &in.RemoteHosts, &out.RemoteHosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RemotePath != nil {
		in, out := &in.RemotePath, &out.RemotePath
		*out = new(string)
		**out = **in
	}
	if in.SecurityType != nil {
		in, out := &in.SecurityType, &out.SecurityType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereNasDatastoreParameters.
func (in *VSphereNasDatastoreParameters) DeepCopy() *VSphereNasDatastoreParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereNasDatastoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereNasDatastoreSpec) DeepCopyInto(out *VSphereNasDatastoreSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereNasDatastoreSpec.
func (in *VSphereNasDatastoreSpec) DeepCopy() *VSphereNasDatastoreSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereNasDatastoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereNasDatastoreStatus) DeepCopyInto(out *VSphereNasDatastoreStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereNasDatastoreStatus.
func (in *VSphereNasDatastoreStatus) DeepCopy() *VSphereNasDatastoreStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereNasDatastoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereStorageDrsVmOverride) DeepCopyInto(out *VSphereStorageDrsVmOverride) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereStorageDrsVmOverride.
func (in *VSphereStorageDrsVmOverride) DeepCopy() *VSphereStorageDrsVmOverride {
	if in == nil {
		return nil
	}
	out := new(VSphereStorageDrsVmOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereStorageDrsVmOverride) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereStorageDrsVmOverrideInitParameters) DeepCopyInto(out *VSphereStorageDrsVmOverrideInitParameters) {
	*out = *in
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.SdrsAutomationLevel != nil {
		in, out := &in.SdrsAutomationLevel, &out.SdrsAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsEnabled != nil {
		in, out := &in.SdrsEnabled, &out.SdrsEnabled
		*out = new(string)
		**out = **in
	}
	if in.SdrsIntraVMAffinity != nil {
		in, out := &in.SdrsIntraVMAffinity, &out.SdrsIntraVMAffinity
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineID != nil {
		in, out := &in.VirtualMachineID, &out.VirtualMachineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereStorageDrsVmOverrideInitParameters.
func (in *VSphereStorageDrsVmOverrideInitParameters) DeepCopy() *VSphereStorageDrsVmOverrideInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereStorageDrsVmOverrideInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereStorageDrsVmOverrideList) DeepCopyInto(out *VSphereStorageDrsVmOverrideList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereStorageDrsVmOverride, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereStorageDrsVmOverrideList.
func (in *VSphereStorageDrsVmOverrideList) DeepCopy() *VSphereStorageDrsVmOverrideList {
	if in == nil {
		return nil
	}
	out := new(VSphereStorageDrsVmOverrideList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereStorageDrsVmOverrideList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereStorageDrsVmOverrideObservation) DeepCopyInto(out *VSphereStorageDrsVmOverrideObservation) {
	*out = *in
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SdrsAutomationLevel != nil {
		in, out := &in.SdrsAutomationLevel, &out.SdrsAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsEnabled != nil {
		in, out := &in.SdrsEnabled, &out.SdrsEnabled
		*out = new(string)
		**out = **in
	}
	if in.SdrsIntraVMAffinity != nil {
		in, out := &in.SdrsIntraVMAffinity, &out.SdrsIntraVMAffinity
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineID != nil {
		in, out := &in.VirtualMachineID, &out.VirtualMachineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereStorageDrsVmOverrideObservation.
func (in *VSphereStorageDrsVmOverrideObservation) DeepCopy() *VSphereStorageDrsVmOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereStorageDrsVmOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereStorageDrsVmOverrideParameters) DeepCopyInto(out *VSphereStorageDrsVmOverrideParameters) {
	*out = *in
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.SdrsAutomationLevel != nil {
		in, out := &in.SdrsAutomationLevel, &out.SdrsAutomationLevel
		*out = new(string)
		**out = **in
	}
	if in.SdrsEnabled != nil {
		in, out := &in.SdrsEnabled, &out.SdrsEnabled
		*out = new(string)
		**out = **in
	}
	if in.SdrsIntraVMAffinity != nil {
		in, out := &in.SdrsIntraVMAffinity, &out.SdrsIntraVMAffinity
		*out = new(string)
		**out = **in
	}
	if in.VirtualMachineID != nil {
		in, out := &in.VirtualMachineID, &out.VirtualMachineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereStorageDrsVmOverrideParameters.
func (in *VSphereStorageDrsVmOverrideParameters) DeepCopy() *VSphereStorageDrsVmOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereStorageDrsVmOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereStorageDrsVmOverrideSpec) DeepCopyInto(out *VSphereStorageDrsVmOverrideSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereStorageDrsVmOverrideSpec.
func (in *VSphereStorageDrsVmOverrideSpec) DeepCopy() *VSphereStorageDrsVmOverrideSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereStorageDrsVmOverrideSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereStorageDrsVmOverrideStatus) DeepCopyInto(out *VSphereStorageDrsVmOverrideStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereStorageDrsVmOverrideStatus.
func (in *VSphereStorageDrsVmOverrideStatus) DeepCopy() *VSphereStorageDrsVmOverrideStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereStorageDrsVmOverrideStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmStoragePolicy) DeepCopyInto(out *VSphereVmStoragePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmStoragePolicy.
func (in *VSphereVmStoragePolicy) DeepCopy() *VSphereVmStoragePolicy {
	if in == nil {
		return nil
	}
	out := new(VSphereVmStoragePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereVmStoragePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmStoragePolicyInitParameters) DeepCopyInto(out *VSphereVmStoragePolicyInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TagRules != nil {
		in, out := &in.TagRules, &out.TagRules
		*out = make([]TagRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmStoragePolicyInitParameters.
func (in *VSphereVmStoragePolicyInitParameters) DeepCopy() *VSphereVmStoragePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereVmStoragePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmStoragePolicyList) DeepCopyInto(out *VSphereVmStoragePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereVmStoragePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmStoragePolicyList.
func (in *VSphereVmStoragePolicyList) DeepCopy() *VSphereVmStoragePolicyList {
	if in == nil {
		return nil
	}
	out := new(VSphereVmStoragePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereVmStoragePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmStoragePolicyObservation) DeepCopyInto(out *VSphereVmStoragePolicyObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TagRules != nil {
		in, out := &in.TagRules, &out.TagRules
		*out = make([]TagRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmStoragePolicyObservation.
func (in *VSphereVmStoragePolicyObservation) DeepCopy() *VSphereVmStoragePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereVmStoragePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmStoragePolicyParameters) DeepCopyInto(out *VSphereVmStoragePolicyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TagRules != nil {
		in, out := &in.TagRules, &out.TagRules
		*out = make([]TagRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmStoragePolicyParameters.
func (in *VSphereVmStoragePolicyParameters) DeepCopy() *VSphereVmStoragePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereVmStoragePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmStoragePolicySpec) DeepCopyInto(out *VSphereVmStoragePolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmStoragePolicySpec.
func (in *VSphereVmStoragePolicySpec) DeepCopy() *VSphereVmStoragePolicySpec {
	if in == nil {
		return nil
	}
	out := new(VSphereVmStoragePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmStoragePolicyStatus) DeepCopyInto(out *VSphereVmStoragePolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmStoragePolicyStatus.
func (in *VSphereVmStoragePolicyStatus) DeepCopy() *VSphereVmStoragePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereVmStoragePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmfsDatastore) DeepCopyInto(out *VSphereVmfsDatastore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmfsDatastore.
func (in *VSphereVmfsDatastore) DeepCopy() *VSphereVmfsDatastore {
	if in == nil {
		return nil
	}
	out := new(VSphereVmfsDatastore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereVmfsDatastore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmfsDatastoreInitParameters) DeepCopyInto(out *VSphereVmfsDatastoreInitParameters) {
	*out = *in
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HostSystemID != nil {
		in, out := &in.HostSystemID, &out.HostSystemID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmfsDatastoreInitParameters.
func (in *VSphereVmfsDatastoreInitParameters) DeepCopy() *VSphereVmfsDatastoreInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereVmfsDatastoreInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmfsDatastoreList) DeepCopyInto(out *VSphereVmfsDatastoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereVmfsDatastore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmfsDatastoreList.
func (in *VSphereVmfsDatastoreList) DeepCopy() *VSphereVmfsDatastoreList {
	if in == nil {
		return nil
	}
	out := new(VSphereVmfsDatastoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereVmfsDatastoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmfsDatastoreObservation) DeepCopyInto(out *VSphereVmfsDatastoreObservation) {
	*out = *in
	if in.Accessible != nil {
		in, out := &in.Accessible, &out.Accessible
		*out = new(bool)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.FreeSpace != nil {
		in, out := &in.FreeSpace, &out.FreeSpace
		*out = new(float64)
		**out = **in
	}
	if in.HostSystemID != nil {
		in, out := &in.HostSystemID, &out.HostSystemID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceMode != nil {
		in, out := &in.MaintenanceMode, &out.MaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.MultipleHostAccess != nil {
		in, out := &in.MultipleHostAccess, &out.MultipleHostAccess
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UncommittedSpace != nil {
		in, out := &in.UncommittedSpace, &out.UncommittedSpace
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmfsDatastoreObservation.
func (in *VSphereVmfsDatastoreObservation) DeepCopy() *VSphereVmfsDatastoreObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereVmfsDatastoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmfsDatastoreParameters) DeepCopyInto(out *VSphereVmfsDatastoreParameters) {
	*out = *in
	if in.CustomAttributes != nil {
		in, out := &in.CustomAttributes, &out.CustomAttributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DatastoreClusterID != nil {
		in, out := &in.DatastoreClusterID, &out.DatastoreClusterID
		*out = new(string)
		**out = **in
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HostSystemID != nil {
		in, out := &in.HostSystemID, &out.HostSystemID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmfsDatastoreParameters.
func (in *VSphereVmfsDatastoreParameters) DeepCopy() *VSphereVmfsDatastoreParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereVmfsDatastoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmfsDatastoreSpec) DeepCopyInto(out *VSphereVmfsDatastoreSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmfsDatastoreSpec.
func (in *VSphereVmfsDatastoreSpec) DeepCopy() *VSphereVmfsDatastoreSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereVmfsDatastoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereVmfsDatastoreStatus) DeepCopyInto(out *VSphereVmfsDatastoreStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereVmfsDatastoreStatus.
func (in *VSphereVmfsDatastoreStatus) DeepCopy() *VSphereVmfsDatastoreStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereVmfsDatastoreStatus)
	in.DeepCopyInto(out)
	return out
}
