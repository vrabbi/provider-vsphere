---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vspherehostvirtualswitches.networking.terasky.labs
spec:
  group: networking.terasky.labs
  names:
    categories:
    - crossplane
    - managed
    - vsphere
    kind: VSphereHostVirtualSwitch
    listKind: VSphereHostVirtualSwitchList
    plural: vspherehostvirtualswitches
    singular: vspherehostvirtualswitch
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VSphereHostVirtualSwitch is the Schema for the VSphereHostVirtualSwitchs
          API. Provides a vSphere Host Virtual Switch Resource. This can be used to
          configure vSwitches direct on an ESXi host.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VSphereHostVirtualSwitchSpec defines the desired state of
              VSphereHostVirtualSwitch
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  activeNics:
                    description: |-
                      The list of active network adapters used for load
                      balancing.
                      List of active network adapters used for load balancing.
                    items:
                      type: string
                    type: array
                  allowForgedTransmits:
                    description: |-
                      Controls whether or not the virtual
                      network adapter is allowed to send network traffic with a different MAC
                      address than that of its own. Default: true.
                      Controls whether or not the virtual network adapter is allowed to send network traffic with a different MAC address than that of its own.
                    type: boolean
                  allowMacChanges:
                    description: |-
                      Controls whether or not the Media Access
                      Control (MAC) address can be changed. Default: true.
                      Controls whether or not the Media Access Control (MAC) address can be changed.
                    type: boolean
                  allowPromiscuous:
                    description: |-
                      Enable promiscuous mode on the network. This
                      flag indicates whether or not all traffic is seen on a given port. Default:
                      false.
                      Enable promiscuous mode on the network. This flag indicates whether or not all traffic is seen on a given port.
                    type: boolean
                  beaconInterval:
                    description: |-
                      The interval, in seconds, that a NIC beacon
                      packet is sent out. This can be used with check_beacon to
                      offer link failure capability beyond link status only. Default: 1.
                      Determines how often, in seconds, a beacon should be sent to probe for the validity of a link.
                    type: number
                  checkBeacon:
                    description: |-
                      Enable beacon probing - this requires that the
                      beacon_interval option has been set in the bridge
                      options. If this is set to false, only link status is used to check for
                      failed NICs.  Default: false.
                      Enable beacon probing. Requires that the vSwitch has been configured to use a beacon. If disabled, link status is used only.
                    type: boolean
                  failback:
                    description: |-
                      If set to true, the teaming policy will re-activate
                      failed interfaces higher in precedence when they come back up.  Default:
                      true.
                      If true, the teaming policy will re-activate failed interfaces higher in precedence when they come back up.
                    type: boolean
                  hostSystemId:
                    description: |-
                      The managed object ID of
                      the host to set the virtual switch up on. Forces a new resource if changed.
                      The managed object ID of the host to set the virtual switch up on.
                    type: string
                  linkDiscoveryOperation:
                    description: |-
                      Whether to advertise or listen
                      for link discovery traffic. Default: listen.
                      Whether to advertise or listen for link discovery. Valid values are advertise, both, listen, and none.
                    type: string
                  linkDiscoveryProtocol:
                    description: |-
                      The discovery protocol type.  Valid
                      types are cpd and lldp. Default: cdp.
                      The discovery protocol type. Valid values are cdp and lldp.
                    type: string
                  mtu:
                    description: |-
                      The maximum transmission unit (MTU) for the virtual
                      switch. Default: 1500.
                      The maximum transmission unit (MTU) of the virtual switch in bytes.
                    type: number
                  name:
                    description: |-
                      The name of the virtual switch. Forces a new resource if
                      changed.
                      The name of the virtual switch.
                    type: string
                  networkAdapters:
                    description: |-
                      The network interfaces to bind to the bridge.
                      The list of network adapters to bind to this virtual switch.
                    items:
                      type: string
                    type: array
                  notifySwitches:
                    description: |-
                      If set to true, the teaming policy will
                      notify the broadcast network of a NIC failover, triggering cache updates.
                      Default: true.
                      If true, the teaming policy will notify the broadcast network of a NIC failover, triggering cache updates.
                    type: boolean
                  numberOfPorts:
                    description: |-
                      The number of ports to create with this
                      virtual switch. Default: 128.
                      The number of ports that this virtual switch is configured to use.
                    type: number
                  shapingAverageBandwidth:
                    description: |-
                      The average bandwidth in bits per
                      second if traffic shaping is enabled. Default: 0
                      The average bandwidth in bits per second if traffic shaping is enabled.
                    type: number
                  shapingBurstSize:
                    description: |-
                      The maximum burst size allowed in bytes if
                      shaping is enabled. Default: 0
                      The maximum burst size allowed in bytes if traffic shaping is enabled.
                    type: number
                  shapingEnabled:
                    description: |-
                      Set to true to enable the traffic shaper for
                      ports managed by this virtual switch. Default: false.
                      Enable traffic shaping on this virtual switch or port group.
                    type: boolean
                  shapingPeakBandwidth:
                    description: |-
                      The peak bandwidth during bursts in
                      bits per second if traffic shaping is enabled. Default: 0
                      The peak bandwidth during bursts in bits per second if traffic shaping is enabled.
                    type: number
                  standbyNics:
                    description: |-
                      The list of standby network adapters used for
                      failover.
                      List of standby network adapters used for failover.
                    items:
                      type: string
                    type: array
                  teamingPolicy:
                    description: |-
                      The network adapter teaming policy. Can be one
                      of loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, or
                      failover_explicit. Default: loadbalance_srcid.
                      The network adapter teaming policy. Can be one of loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, or failover_explicit.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  activeNics:
                    description: |-
                      The list of active network adapters used for load
                      balancing.
                      List of active network adapters used for load balancing.
                    items:
                      type: string
                    type: array
                  allowForgedTransmits:
                    description: |-
                      Controls whether or not the virtual
                      network adapter is allowed to send network traffic with a different MAC
                      address than that of its own. Default: true.
                      Controls whether or not the virtual network adapter is allowed to send network traffic with a different MAC address than that of its own.
                    type: boolean
                  allowMacChanges:
                    description: |-
                      Controls whether or not the Media Access
                      Control (MAC) address can be changed. Default: true.
                      Controls whether or not the Media Access Control (MAC) address can be changed.
                    type: boolean
                  allowPromiscuous:
                    description: |-
                      Enable promiscuous mode on the network. This
                      flag indicates whether or not all traffic is seen on a given port. Default:
                      false.
                      Enable promiscuous mode on the network. This flag indicates whether or not all traffic is seen on a given port.
                    type: boolean
                  beaconInterval:
                    description: |-
                      The interval, in seconds, that a NIC beacon
                      packet is sent out. This can be used with check_beacon to
                      offer link failure capability beyond link status only. Default: 1.
                      Determines how often, in seconds, a beacon should be sent to probe for the validity of a link.
                    type: number
                  checkBeacon:
                    description: |-
                      Enable beacon probing - this requires that the
                      beacon_interval option has been set in the bridge
                      options. If this is set to false, only link status is used to check for
                      failed NICs.  Default: false.
                      Enable beacon probing. Requires that the vSwitch has been configured to use a beacon. If disabled, link status is used only.
                    type: boolean
                  failback:
                    description: |-
                      If set to true, the teaming policy will re-activate
                      failed interfaces higher in precedence when they come back up.  Default:
                      true.
                      If true, the teaming policy will re-activate failed interfaces higher in precedence when they come back up.
                    type: boolean
                  hostSystemId:
                    description: |-
                      The managed object ID of
                      the host to set the virtual switch up on. Forces a new resource if changed.
                      The managed object ID of the host to set the virtual switch up on.
                    type: string
                  linkDiscoveryOperation:
                    description: |-
                      Whether to advertise or listen
                      for link discovery traffic. Default: listen.
                      Whether to advertise or listen for link discovery. Valid values are advertise, both, listen, and none.
                    type: string
                  linkDiscoveryProtocol:
                    description: |-
                      The discovery protocol type.  Valid
                      types are cpd and lldp. Default: cdp.
                      The discovery protocol type. Valid values are cdp and lldp.
                    type: string
                  mtu:
                    description: |-
                      The maximum transmission unit (MTU) for the virtual
                      switch. Default: 1500.
                      The maximum transmission unit (MTU) of the virtual switch in bytes.
                    type: number
                  name:
                    description: |-
                      The name of the virtual switch. Forces a new resource if
                      changed.
                      The name of the virtual switch.
                    type: string
                  networkAdapters:
                    description: |-
                      The network interfaces to bind to the bridge.
                      The list of network adapters to bind to this virtual switch.
                    items:
                      type: string
                    type: array
                  notifySwitches:
                    description: |-
                      If set to true, the teaming policy will
                      notify the broadcast network of a NIC failover, triggering cache updates.
                      Default: true.
                      If true, the teaming policy will notify the broadcast network of a NIC failover, triggering cache updates.
                    type: boolean
                  numberOfPorts:
                    description: |-
                      The number of ports to create with this
                      virtual switch. Default: 128.
                      The number of ports that this virtual switch is configured to use.
                    type: number
                  shapingAverageBandwidth:
                    description: |-
                      The average bandwidth in bits per
                      second if traffic shaping is enabled. Default: 0
                      The average bandwidth in bits per second if traffic shaping is enabled.
                    type: number
                  shapingBurstSize:
                    description: |-
                      The maximum burst size allowed in bytes if
                      shaping is enabled. Default: 0
                      The maximum burst size allowed in bytes if traffic shaping is enabled.
                    type: number
                  shapingEnabled:
                    description: |-
                      Set to true to enable the traffic shaper for
                      ports managed by this virtual switch. Default: false.
                      Enable traffic shaping on this virtual switch or port group.
                    type: boolean
                  shapingPeakBandwidth:
                    description: |-
                      The peak bandwidth during bursts in
                      bits per second if traffic shaping is enabled. Default: 0
                      The peak bandwidth during bursts in bits per second if traffic shaping is enabled.
                    type: number
                  standbyNics:
                    description: |-
                      The list of standby network adapters used for
                      failover.
                      List of standby network adapters used for failover.
                    items:
                      type: string
                    type: array
                  teamingPolicy:
                    description: |-
                      The network adapter teaming policy. Can be one
                      of loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, or
                      failover_explicit. Default: loadbalance_srcid.
                      The network adapter teaming policy. Can be one of loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, or failover_explicit.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.activeNics is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.activeNics)
                || (has(self.initProvider) && has(self.initProvider.activeNics))'
            - message: spec.forProvider.hostSystemId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.hostSystemId)
                || (has(self.initProvider) && has(self.initProvider.hostSystemId))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.networkAdapters is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.networkAdapters)
                || (has(self.initProvider) && has(self.initProvider.networkAdapters))'
          status:
            description: VSphereHostVirtualSwitchStatus defines the observed state
              of VSphereHostVirtualSwitch.
            properties:
              atProvider:
                properties:
                  activeNics:
                    description: |-
                      The list of active network adapters used for load
                      balancing.
                      List of active network adapters used for load balancing.
                    items:
                      type: string
                    type: array
                  allowForgedTransmits:
                    description: |-
                      Controls whether or not the virtual
                      network adapter is allowed to send network traffic with a different MAC
                      address than that of its own. Default: true.
                      Controls whether or not the virtual network adapter is allowed to send network traffic with a different MAC address than that of its own.
                    type: boolean
                  allowMacChanges:
                    description: |-
                      Controls whether or not the Media Access
                      Control (MAC) address can be changed. Default: true.
                      Controls whether or not the Media Access Control (MAC) address can be changed.
                    type: boolean
                  allowPromiscuous:
                    description: |-
                      Enable promiscuous mode on the network. This
                      flag indicates whether or not all traffic is seen on a given port. Default:
                      false.
                      Enable promiscuous mode on the network. This flag indicates whether or not all traffic is seen on a given port.
                    type: boolean
                  beaconInterval:
                    description: |-
                      The interval, in seconds, that a NIC beacon
                      packet is sent out. This can be used with check_beacon to
                      offer link failure capability beyond link status only. Default: 1.
                      Determines how often, in seconds, a beacon should be sent to probe for the validity of a link.
                    type: number
                  checkBeacon:
                    description: |-
                      Enable beacon probing - this requires that the
                      beacon_interval option has been set in the bridge
                      options. If this is set to false, only link status is used to check for
                      failed NICs.  Default: false.
                      Enable beacon probing. Requires that the vSwitch has been configured to use a beacon. If disabled, link status is used only.
                    type: boolean
                  failback:
                    description: |-
                      If set to true, the teaming policy will re-activate
                      failed interfaces higher in precedence when they come back up.  Default:
                      true.
                      If true, the teaming policy will re-activate failed interfaces higher in precedence when they come back up.
                    type: boolean
                  hostSystemId:
                    description: |-
                      The managed object ID of
                      the host to set the virtual switch up on. Forces a new resource if changed.
                      The managed object ID of the host to set the virtual switch up on.
                    type: string
                  id:
                    type: string
                  linkDiscoveryOperation:
                    description: |-
                      Whether to advertise or listen
                      for link discovery traffic. Default: listen.
                      Whether to advertise or listen for link discovery. Valid values are advertise, both, listen, and none.
                    type: string
                  linkDiscoveryProtocol:
                    description: |-
                      The discovery protocol type.  Valid
                      types are cpd and lldp. Default: cdp.
                      The discovery protocol type. Valid values are cdp and lldp.
                    type: string
                  mtu:
                    description: |-
                      The maximum transmission unit (MTU) for the virtual
                      switch. Default: 1500.
                      The maximum transmission unit (MTU) of the virtual switch in bytes.
                    type: number
                  name:
                    description: |-
                      The name of the virtual switch. Forces a new resource if
                      changed.
                      The name of the virtual switch.
                    type: string
                  networkAdapters:
                    description: |-
                      The network interfaces to bind to the bridge.
                      The list of network adapters to bind to this virtual switch.
                    items:
                      type: string
                    type: array
                  notifySwitches:
                    description: |-
                      If set to true, the teaming policy will
                      notify the broadcast network of a NIC failover, triggering cache updates.
                      Default: true.
                      If true, the teaming policy will notify the broadcast network of a NIC failover, triggering cache updates.
                    type: boolean
                  numberOfPorts:
                    description: |-
                      The number of ports to create with this
                      virtual switch. Default: 128.
                      The number of ports that this virtual switch is configured to use.
                    type: number
                  shapingAverageBandwidth:
                    description: |-
                      The average bandwidth in bits per
                      second if traffic shaping is enabled. Default: 0
                      The average bandwidth in bits per second if traffic shaping is enabled.
                    type: number
                  shapingBurstSize:
                    description: |-
                      The maximum burst size allowed in bytes if
                      shaping is enabled. Default: 0
                      The maximum burst size allowed in bytes if traffic shaping is enabled.
                    type: number
                  shapingEnabled:
                    description: |-
                      Set to true to enable the traffic shaper for
                      ports managed by this virtual switch. Default: false.
                      Enable traffic shaping on this virtual switch or port group.
                    type: boolean
                  shapingPeakBandwidth:
                    description: |-
                      The peak bandwidth during bursts in
                      bits per second if traffic shaping is enabled. Default: 0
                      The peak bandwidth during bursts in bits per second if traffic shaping is enabled.
                    type: number
                  standbyNics:
                    description: |-
                      The list of standby network adapters used for
                      failover.
                      List of standby network adapters used for failover.
                    items:
                      type: string
                    type: array
                  teamingPolicy:
                    description: |-
                      The network adapter teaming policy. Can be one
                      of loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, or
                      failover_explicit. Default: loadbalance_srcid.
                      The network adapter teaming policy. Can be one of loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, or failover_explicit.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
