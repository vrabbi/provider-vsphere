---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vspherehavmoverrides.hostandclustermanagement.terasky.labs
spec:
  group: hostandclustermanagement.terasky.labs
  names:
    categories:
    - crossplane
    - managed
    - vsphere
    kind: VSphereHaVmOverride
    listKind: VSphereHaVmOverrideList
    plural: vspherehavmoverrides
    singular: vspherehavmoverride
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VSphereHaVmOverride is the Schema for the VSphereHaVmOverrides
          API. Provides a VMware vSphere HA virtual machine override resource. This
          can be used to override high availability settings in a cluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VSphereHaVmOverrideSpec defines the desired state of VSphereHaVmOverride
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  computeClusterId:
                    description: |-
                      The managed object reference
                      ID of the cluster to put the override in.  Forces a new
                      resource if changed.
                      The managed object ID of the cluster.
                    type: string
                  haDatastoreApdRecoveryAction:
                    description: |-
                      Controls the action to take
                      on this virtual machine if an APD status on an affected datastore clears in
                      the middle of an APD event. Can be one of useClusterDefault, none or
                      reset.  Default: useClusterDefault.
                      *
                      Controls the action to take on this virtual machine if an APD status on an affected datastore clears in the middle of an APD event. Can be one of useClusterDefault, none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: |-
                      Controls the action to take on this
                      virtual machine when the cluster has detected loss to all paths to a relevant
                      datastore. Can be one of clusterDefault, disabled, warning,
                      restartConservative, or restartAggressive.  Default: clusterDefault.
                      *
                      Controls the action to take on this virtual machine when the cluster has detected loss to all paths to a relevant datastore. Can be one of clusterDefault, disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: |-
                      Controls the delay in seconds
                      to wait after an APD timeout event to execute the response action defined in
                      ha_datastore_apd_response. Use -1 to use
                      the cluster default. Default: -1.
                      *
                      Controls the delay in seconds to wait after an APD timeout event to execute the response action defined in ha_datastore_apd_response. Specify -1 to use the cluster setting.
                    type: number
                  haDatastorePdlResponse:
                    description: |-
                      Controls the action to take on this
                      virtual machine when the cluster has detected a permanent device loss to a
                      relevant datastore. Can be one of clusterDefault, disabled, warning, or
                      restartAggressive. Default: clusterDefault.
                      *
                      Controls the action to take on this virtual machine when the cluster has detected a permanent device loss to a relevant datastore. Can be one of clusterDefault, disabled, warning, or restartAggressive.
                    type: string
                  haHostIsolationResponse:
                    description: |-
                      The action to take on this virtual
                      machine when a host has detected that it has been isolated from the rest of
                      the cluster. Can be one of clusterIsolationResponse, none, powerOff, or
                      shutdown. Default: clusterIsolationResponse.
                      The action to take on this virtual machine when a host is isolated from the rest of the cluster. Can be one of clusterIsolationResponse, none, powerOff, or shutdown.
                    type: string
                  haVmFailureInterval:
                    description: |-
                      If a heartbeat from this virtual
                      machine is not received within this configured interval, the virtual machine
                      is marked as failed. The value is in seconds. Default: 30.
                      If a heartbeat from this virtual machine is not received within this configured interval, the virtual machine is marked as failed. The value is in seconds.
                    type: number
                  haVmMaximumFailureWindow:
                    description: |-
                      The length of the reset window in
                      which ha_vm_maximum_resets can operate. When this
                      window expires, no more resets are attempted regardless of the setting
                      configured in ha_vm_maximum_resets. -1 means no window, meaning an
                      unlimited reset time is allotted. The value is specified in seconds. Default:
                      -1 (no window).
                      The length of the reset window in which ha_vm_maximum_resets can operate. When this window expires, no more resets are attempted regardless of the setting configured in ha_vm_maximum_resets. -1 means no window, meaning an unlimited reset time is allotted.
                    type: number
                  haVmMaximumResets:
                    description: |-
                      The maximum number of resets that HA will
                      perform to this virtual machine when responding to a failure event. Default:
                      3
                      The maximum number of resets that HA will perform to this virtual machine when responding to a failure event.
                    type: number
                  haVmMinimumUptime:
                    description: |-
                      The time, in seconds, that HA waits after
                      powering on this virtual machine before monitoring for heartbeats. Default:
                      120 (2 minutes).
                      The time, in seconds, that HA waits after powering on this virtual machine before monitoring for heartbeats.
                    type: number
                  haVmMonitoring:
                    description: |-
                      The type of virtual machine monitoring to use
                      when HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring. Default: vmMonitoringDisabled.
                      The type of virtual machine monitoring to use for this virtual machine. Can be one of vmMonitoringDisabled, vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmMonitoringUseClusterDefaults:
                    description: |-
                      Determines whether or
                      not the cluster's default settings or the VM override settings specified in
                      this resource are used for virtual machine monitoring. The default is true
                      (use cluster defaults) - set to false to have overrides take effect.
                      Determines whether or not the cluster's default settings or the VM override settings specified in this resource are used for virtual machine monitoring. The default is true (use cluster defaults) - set to false to have overrides take effect.
                    type: boolean
                  haVmRestartPriority:
                    description: |-
                      The restart priority for the virtual
                      machine when vSphere detects a host failure. Can be one of
                      clusterRestartPriority, lowest, low, medium, high, highest, or disabled.
                      Default: clusterRestartPriority.
                      The restart priority for this virtual machine when vSphere detects a host failure. Can be one of clusterRestartPriority, lowest, low, medium, high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: |-
                      The maximum time, in seconds, that
                      vSphere HA will wait for this virtual machine to be ready. Use -1 to
                      specify the cluster default.  Default: -1.
                      *
                      The maximum time, in seconds, that vSphere HA will wait for the virtual machine to be ready. Use -1 to use the cluster default.
                    type: number
                  virtualMachineId:
                    description: |-
                      The UUID of the virtual machine to create
                      the override for.  Forces a new resource if changed.
                      The managed object ID of the virtual machine.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  computeClusterId:
                    description: |-
                      The managed object reference
                      ID of the cluster to put the override in.  Forces a new
                      resource if changed.
                      The managed object ID of the cluster.
                    type: string
                  haDatastoreApdRecoveryAction:
                    description: |-
                      Controls the action to take
                      on this virtual machine if an APD status on an affected datastore clears in
                      the middle of an APD event. Can be one of useClusterDefault, none or
                      reset.  Default: useClusterDefault.
                      *
                      Controls the action to take on this virtual machine if an APD status on an affected datastore clears in the middle of an APD event. Can be one of useClusterDefault, none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: |-
                      Controls the action to take on this
                      virtual machine when the cluster has detected loss to all paths to a relevant
                      datastore. Can be one of clusterDefault, disabled, warning,
                      restartConservative, or restartAggressive.  Default: clusterDefault.
                      *
                      Controls the action to take on this virtual machine when the cluster has detected loss to all paths to a relevant datastore. Can be one of clusterDefault, disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: |-
                      Controls the delay in seconds
                      to wait after an APD timeout event to execute the response action defined in
                      ha_datastore_apd_response. Use -1 to use
                      the cluster default. Default: -1.
                      *
                      Controls the delay in seconds to wait after an APD timeout event to execute the response action defined in ha_datastore_apd_response. Specify -1 to use the cluster setting.
                    type: number
                  haDatastorePdlResponse:
                    description: |-
                      Controls the action to take on this
                      virtual machine when the cluster has detected a permanent device loss to a
                      relevant datastore. Can be one of clusterDefault, disabled, warning, or
                      restartAggressive. Default: clusterDefault.
                      *
                      Controls the action to take on this virtual machine when the cluster has detected a permanent device loss to a relevant datastore. Can be one of clusterDefault, disabled, warning, or restartAggressive.
                    type: string
                  haHostIsolationResponse:
                    description: |-
                      The action to take on this virtual
                      machine when a host has detected that it has been isolated from the rest of
                      the cluster. Can be one of clusterIsolationResponse, none, powerOff, or
                      shutdown. Default: clusterIsolationResponse.
                      The action to take on this virtual machine when a host is isolated from the rest of the cluster. Can be one of clusterIsolationResponse, none, powerOff, or shutdown.
                    type: string
                  haVmFailureInterval:
                    description: |-
                      If a heartbeat from this virtual
                      machine is not received within this configured interval, the virtual machine
                      is marked as failed. The value is in seconds. Default: 30.
                      If a heartbeat from this virtual machine is not received within this configured interval, the virtual machine is marked as failed. The value is in seconds.
                    type: number
                  haVmMaximumFailureWindow:
                    description: |-
                      The length of the reset window in
                      which ha_vm_maximum_resets can operate. When this
                      window expires, no more resets are attempted regardless of the setting
                      configured in ha_vm_maximum_resets. -1 means no window, meaning an
                      unlimited reset time is allotted. The value is specified in seconds. Default:
                      -1 (no window).
                      The length of the reset window in which ha_vm_maximum_resets can operate. When this window expires, no more resets are attempted regardless of the setting configured in ha_vm_maximum_resets. -1 means no window, meaning an unlimited reset time is allotted.
                    type: number
                  haVmMaximumResets:
                    description: |-
                      The maximum number of resets that HA will
                      perform to this virtual machine when responding to a failure event. Default:
                      3
                      The maximum number of resets that HA will perform to this virtual machine when responding to a failure event.
                    type: number
                  haVmMinimumUptime:
                    description: |-
                      The time, in seconds, that HA waits after
                      powering on this virtual machine before monitoring for heartbeats. Default:
                      120 (2 minutes).
                      The time, in seconds, that HA waits after powering on this virtual machine before monitoring for heartbeats.
                    type: number
                  haVmMonitoring:
                    description: |-
                      The type of virtual machine monitoring to use
                      when HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring. Default: vmMonitoringDisabled.
                      The type of virtual machine monitoring to use for this virtual machine. Can be one of vmMonitoringDisabled, vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmMonitoringUseClusterDefaults:
                    description: |-
                      Determines whether or
                      not the cluster's default settings or the VM override settings specified in
                      this resource are used for virtual machine monitoring. The default is true
                      (use cluster defaults) - set to false to have overrides take effect.
                      Determines whether or not the cluster's default settings or the VM override settings specified in this resource are used for virtual machine monitoring. The default is true (use cluster defaults) - set to false to have overrides take effect.
                    type: boolean
                  haVmRestartPriority:
                    description: |-
                      The restart priority for the virtual
                      machine when vSphere detects a host failure. Can be one of
                      clusterRestartPriority, lowest, low, medium, high, highest, or disabled.
                      Default: clusterRestartPriority.
                      The restart priority for this virtual machine when vSphere detects a host failure. Can be one of clusterRestartPriority, lowest, low, medium, high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: |-
                      The maximum time, in seconds, that
                      vSphere HA will wait for this virtual machine to be ready. Use -1 to
                      specify the cluster default.  Default: -1.
                      *
                      The maximum time, in seconds, that vSphere HA will wait for the virtual machine to be ready. Use -1 to use the cluster default.
                    type: number
                  virtualMachineId:
                    description: |-
                      The UUID of the virtual machine to create
                      the override for.  Forces a new resource if changed.
                      The managed object ID of the virtual machine.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.computeClusterId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.computeClusterId)
                || (has(self.initProvider) && has(self.initProvider.computeClusterId))'
            - message: spec.forProvider.virtualMachineId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.virtualMachineId)
                || (has(self.initProvider) && has(self.initProvider.virtualMachineId))'
          status:
            description: VSphereHaVmOverrideStatus defines the observed state of VSphereHaVmOverride.
            properties:
              atProvider:
                properties:
                  computeClusterId:
                    description: |-
                      The managed object reference
                      ID of the cluster to put the override in.  Forces a new
                      resource if changed.
                      The managed object ID of the cluster.
                    type: string
                  haDatastoreApdRecoveryAction:
                    description: |-
                      Controls the action to take
                      on this virtual machine if an APD status on an affected datastore clears in
                      the middle of an APD event. Can be one of useClusterDefault, none or
                      reset.  Default: useClusterDefault.
                      *
                      Controls the action to take on this virtual machine if an APD status on an affected datastore clears in the middle of an APD event. Can be one of useClusterDefault, none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: |-
                      Controls the action to take on this
                      virtual machine when the cluster has detected loss to all paths to a relevant
                      datastore. Can be one of clusterDefault, disabled, warning,
                      restartConservative, or restartAggressive.  Default: clusterDefault.
                      *
                      Controls the action to take on this virtual machine when the cluster has detected loss to all paths to a relevant datastore. Can be one of clusterDefault, disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: |-
                      Controls the delay in seconds
                      to wait after an APD timeout event to execute the response action defined in
                      ha_datastore_apd_response. Use -1 to use
                      the cluster default. Default: -1.
                      *
                      Controls the delay in seconds to wait after an APD timeout event to execute the response action defined in ha_datastore_apd_response. Specify -1 to use the cluster setting.
                    type: number
                  haDatastorePdlResponse:
                    description: |-
                      Controls the action to take on this
                      virtual machine when the cluster has detected a permanent device loss to a
                      relevant datastore. Can be one of clusterDefault, disabled, warning, or
                      restartAggressive. Default: clusterDefault.
                      *
                      Controls the action to take on this virtual machine when the cluster has detected a permanent device loss to a relevant datastore. Can be one of clusterDefault, disabled, warning, or restartAggressive.
                    type: string
                  haHostIsolationResponse:
                    description: |-
                      The action to take on this virtual
                      machine when a host has detected that it has been isolated from the rest of
                      the cluster. Can be one of clusterIsolationResponse, none, powerOff, or
                      shutdown. Default: clusterIsolationResponse.
                      The action to take on this virtual machine when a host is isolated from the rest of the cluster. Can be one of clusterIsolationResponse, none, powerOff, or shutdown.
                    type: string
                  haVmFailureInterval:
                    description: |-
                      If a heartbeat from this virtual
                      machine is not received within this configured interval, the virtual machine
                      is marked as failed. The value is in seconds. Default: 30.
                      If a heartbeat from this virtual machine is not received within this configured interval, the virtual machine is marked as failed. The value is in seconds.
                    type: number
                  haVmMaximumFailureWindow:
                    description: |-
                      The length of the reset window in
                      which ha_vm_maximum_resets can operate. When this
                      window expires, no more resets are attempted regardless of the setting
                      configured in ha_vm_maximum_resets. -1 means no window, meaning an
                      unlimited reset time is allotted. The value is specified in seconds. Default:
                      -1 (no window).
                      The length of the reset window in which ha_vm_maximum_resets can operate. When this window expires, no more resets are attempted regardless of the setting configured in ha_vm_maximum_resets. -1 means no window, meaning an unlimited reset time is allotted.
                    type: number
                  haVmMaximumResets:
                    description: |-
                      The maximum number of resets that HA will
                      perform to this virtual machine when responding to a failure event. Default:
                      3
                      The maximum number of resets that HA will perform to this virtual machine when responding to a failure event.
                    type: number
                  haVmMinimumUptime:
                    description: |-
                      The time, in seconds, that HA waits after
                      powering on this virtual machine before monitoring for heartbeats. Default:
                      120 (2 minutes).
                      The time, in seconds, that HA waits after powering on this virtual machine before monitoring for heartbeats.
                    type: number
                  haVmMonitoring:
                    description: |-
                      The type of virtual machine monitoring to use
                      when HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring. Default: vmMonitoringDisabled.
                      The type of virtual machine monitoring to use for this virtual machine. Can be one of vmMonitoringDisabled, vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmMonitoringUseClusterDefaults:
                    description: |-
                      Determines whether or
                      not the cluster's default settings or the VM override settings specified in
                      this resource are used for virtual machine monitoring. The default is true
                      (use cluster defaults) - set to false to have overrides take effect.
                      Determines whether or not the cluster's default settings or the VM override settings specified in this resource are used for virtual machine monitoring. The default is true (use cluster defaults) - set to false to have overrides take effect.
                    type: boolean
                  haVmRestartPriority:
                    description: |-
                      The restart priority for the virtual
                      machine when vSphere detects a host failure. Can be one of
                      clusterRestartPriority, lowest, low, medium, high, highest, or disabled.
                      Default: clusterRestartPriority.
                      The restart priority for this virtual machine when vSphere detects a host failure. Can be one of clusterRestartPriority, lowest, low, medium, high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: |-
                      The maximum time, in seconds, that
                      vSphere HA will wait for this virtual machine to be ready. Use -1 to
                      specify the cluster default.  Default: -1.
                      *
                      The maximum time, in seconds, that vSphere HA will wait for the virtual machine to be ready. Use -1 to use the cluster default.
                    type: number
                  id:
                    type: string
                  virtualMachineId:
                    description: |-
                      The UUID of the virtual machine to create
                      the override for.  Forces a new resource if changed.
                      The managed object ID of the virtual machine.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
