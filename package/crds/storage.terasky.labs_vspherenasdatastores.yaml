---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vspherenasdatastores.storage.terasky.labs
spec:
  group: storage.terasky.labs
  names:
    categories:
    - crossplane
    - managed
    - vsphere
    kind: VSphereNasDatastore
    listKind: VSphereNasDatastoreList
    plural: vspherenasdatastores
    singular: vspherenasdatastore
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VSphereNasDatastore is the Schema for the VSphereNasDatastores
          API. Provides a vSphere NAS datastore resource. This can be used to mount
          a NFS share as a datastore on a host.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VSphereNasDatastoreSpec defines the desired state of VSphereNasDatastore
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessMode:
                    description: |-
                      Access mode for the mount point. Can be one of
                      readOnly or readWrite. Note that readWrite does not necessarily mean
                      that the datastore will be read-write depending on the permissions of the
                      actual share. Default: readWrite. Forces a new resource if changed.
                      Access mode for the mount point. Can be one of readOnly or readWrite.
                    type: string
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      Map of custom attribute ids to attribute
                      value strings to set on resource. See here
                      for a reference on how to set values for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datastoreClusterId:
                    description: |-
                      The managed object
                      ID of a datastore cluster to put this datastore in.
                      Conflicts with folder.
                      The managed object ID of the datastore cluster to place the datastore in.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this datastore in.
                      This is a path relative to the datacenter you are deploying the datastore to. Conflicts with
                      datastore_cluster_id.
                      The path to the datastore folder to put the datastore in.
                    type: string
                  hostSystemIds:
                    description: |-
                      The managed object IDs of
                      the hosts to mount the datastore on.
                      The managed object IDs of the hosts to mount the datastore on.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      The name of the datastore. Forces a new resource if
                      changed.
                      The name of the datastore.
                    type: string
                  remoteHosts:
                    description: |-
                      The hostnames or IP addresses of the remote
                      servers. Only one element should be present for NFS v3 but multiple
                      can be present for NFS v4.1. Forces a new resource if changed.
                      The hostnames or IP addresses of the remote server or servers. Only one element should be present for NFS v3 but multiple can be present for NFS v4.1.
                    items:
                      type: string
                    type: array
                  remotePath:
                    description: |-
                      The remote path of the mount point. Forces a new
                      resource if changed.
                      The remote path of the mount point.
                    type: string
                  securityType:
                    description: |-
                      The security type to use when using NFS v4.1.
                      Can be one of AUTH_SYS, SEC_KRB5, or SEC_KRB5I. Forces a new resource
                      if changed.
                      The security type to use.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  type:
                    description: |-
                      The type of NAS volume. Can be one of NFS (to denote
                      v3) or NFS41 (to denote NFS v4.1). Default: NFS. Forces a new resource if
                      changed.
                      The type of NAS volume. Can be one of NFS (to denote v3) or NFS41 (to denote NFS v4.1).
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessMode:
                    description: |-
                      Access mode for the mount point. Can be one of
                      readOnly or readWrite. Note that readWrite does not necessarily mean
                      that the datastore will be read-write depending on the permissions of the
                      actual share. Default: readWrite. Forces a new resource if changed.
                      Access mode for the mount point. Can be one of readOnly or readWrite.
                    type: string
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      Map of custom attribute ids to attribute
                      value strings to set on resource. See here
                      for a reference on how to set values for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datastoreClusterId:
                    description: |-
                      The managed object
                      ID of a datastore cluster to put this datastore in.
                      Conflicts with folder.
                      The managed object ID of the datastore cluster to place the datastore in.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this datastore in.
                      This is a path relative to the datacenter you are deploying the datastore to. Conflicts with
                      datastore_cluster_id.
                      The path to the datastore folder to put the datastore in.
                    type: string
                  hostSystemIds:
                    description: |-
                      The managed object IDs of
                      the hosts to mount the datastore on.
                      The managed object IDs of the hosts to mount the datastore on.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      The name of the datastore. Forces a new resource if
                      changed.
                      The name of the datastore.
                    type: string
                  remoteHosts:
                    description: |-
                      The hostnames or IP addresses of the remote
                      servers. Only one element should be present for NFS v3 but multiple
                      can be present for NFS v4.1. Forces a new resource if changed.
                      The hostnames or IP addresses of the remote server or servers. Only one element should be present for NFS v3 but multiple can be present for NFS v4.1.
                    items:
                      type: string
                    type: array
                  remotePath:
                    description: |-
                      The remote path of the mount point. Forces a new
                      resource if changed.
                      The remote path of the mount point.
                    type: string
                  securityType:
                    description: |-
                      The security type to use when using NFS v4.1.
                      Can be one of AUTH_SYS, SEC_KRB5, or SEC_KRB5I. Forces a new resource
                      if changed.
                      The security type to use.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  type:
                    description: |-
                      The type of NAS volume. Can be one of NFS (to denote
                      v3) or NFS41 (to denote NFS v4.1). Default: NFS. Forces a new resource if
                      changed.
                      The type of NAS volume. Can be one of NFS (to denote v3) or NFS41 (to denote NFS v4.1).
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.hostSystemIds is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.hostSystemIds)
                || (has(self.initProvider) && has(self.initProvider.hostSystemIds))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.remoteHosts is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.remoteHosts)
                || (has(self.initProvider) && has(self.initProvider.remoteHosts))'
            - message: spec.forProvider.remotePath is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.remotePath)
                || (has(self.initProvider) && has(self.initProvider.remotePath))'
          status:
            description: VSphereNasDatastoreStatus defines the observed state of VSphereNasDatastore.
            properties:
              atProvider:
                properties:
                  accessMode:
                    description: |-
                      Access mode for the mount point. Can be one of
                      readOnly or readWrite. Note that readWrite does not necessarily mean
                      that the datastore will be read-write depending on the permissions of the
                      actual share. Default: readWrite. Forces a new resource if changed.
                      Access mode for the mount point. Can be one of readOnly or readWrite.
                    type: string
                  accessible:
                    description: |-
                      The connectivity status of the datastore. If this is false,
                      some other computed attributes may be out of date.
                      The connectivity status of the datastore. If this is false, some other computed attributes may be out of date.
                    type: boolean
                  capacity:
                    description: |-
                      Maximum capacity of the datastore, in megabytes.
                      Maximum capacity of the datastore, in MB.
                    type: number
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      Map of custom attribute ids to attribute
                      value strings to set on resource. See here
                      for a reference on how to set values for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datastoreClusterId:
                    description: |-
                      The managed object
                      ID of a datastore cluster to put this datastore in.
                      Conflicts with folder.
                      The managed object ID of the datastore cluster to place the datastore in.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this datastore in.
                      This is a path relative to the datacenter you are deploying the datastore to. Conflicts with
                      datastore_cluster_id.
                      The path to the datastore folder to put the datastore in.
                    type: string
                  freeSpace:
                    description: |-
                      Available space of this datastore, in megabytes.
                      Available space of this datastore, in MB.
                    type: number
                  hostSystemIds:
                    description: |-
                      The managed object IDs of
                      the hosts to mount the datastore on.
                      The managed object IDs of the hosts to mount the datastore on.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    description: The managed object reference ID of the datastore.
                    type: string
                  maintenanceMode:
                    description: |-
                      The current maintenance mode state of the datastore.
                      The current maintenance mode state of the datastore.
                    type: string
                  multipleHostAccess:
                    description: |-
                      If true, more than one host in the datacenter has
                      been configured with access to the datastore.
                      If true, more than one host in the datacenter has been configured with access to the datastore.
                    type: boolean
                  name:
                    description: |-
                      The name of the datastore. Forces a new resource if
                      changed.
                      The name of the datastore.
                    type: string
                  protocolEndpoint:
                    description: |-
                      Indicates that this NAS volume is a protocol endpoint.
                      This field is only populated if the host supports virtual datastores.
                      Indicates that this NAS volume is a protocol endpoint. This field is only populated if the host supports virtual datastores.
                    type: boolean
                  remoteHosts:
                    description: |-
                      The hostnames or IP addresses of the remote
                      servers. Only one element should be present for NFS v3 but multiple
                      can be present for NFS v4.1. Forces a new resource if changed.
                      The hostnames or IP addresses of the remote server or servers. Only one element should be present for NFS v3 but multiple can be present for NFS v4.1.
                    items:
                      type: string
                    type: array
                  remotePath:
                    description: |-
                      The remote path of the mount point. Forces a new
                      resource if changed.
                      The remote path of the mount point.
                    type: string
                  securityType:
                    description: |-
                      The security type to use when using NFS v4.1.
                      Can be one of AUTH_SYS, SEC_KRB5, or SEC_KRB5I. Forces a new resource
                      if changed.
                      The security type to use.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  type:
                    description: |-
                      The type of NAS volume. Can be one of NFS (to denote
                      v3) or NFS41 (to denote NFS v4.1). Default: NFS. Forces a new resource if
                      changed.
                      The type of NAS volume. Can be one of NFS (to denote v3) or NFS41 (to denote NFS v4.1).
                    type: string
                  uncommittedSpace:
                    description: |-
                      Total additional storage space, in megabytes,
                      potentially used by all virtual machines on this datastore.
                      Total additional storage space, in MB, potentially used by all virtual machines on this datastore.
                    type: number
                  url:
                    description: |-
                      The unique locator for the datastore.
                      The unique locator for the datastore.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
