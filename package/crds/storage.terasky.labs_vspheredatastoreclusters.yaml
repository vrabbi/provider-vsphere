---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vspheredatastoreclusters.storage.terasky.labs
spec:
  group: storage.terasky.labs
  names:
    categories:
    - crossplane
    - managed
    - vsphere
    kind: VSphereDatastoreCluster
    listKind: VSphereDatastoreClusterList
    plural: vspheredatastoreclusters
    singular: vspheredatastorecluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VSphereDatastoreCluster is the Schema for the VSphereDatastoreClusters
          API. Provides a vSphere datastore cluster resource. This can be used to
          create and manage datastore clusters.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VSphereDatastoreClusterSpec defines the desired state of
              VSphereDatastoreCluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of custom attribute ids to attribute
                      value strings to set for the datastore cluster. See
                      here for a reference on how to set values
                      for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datacenterId:
                    description: |-
                      The managed object ID of
                      the datacenter to create the datastore cluster in. Forces a new resource if
                      changed.
                      The managed object ID of the datacenter to put the datastore cluster in.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this datastore
                      cluster in.  This is a path relative to the datacenter you are deploying the
                      datastore to.
                      The name of the folder to locate the datastore cluster in.
                    type: string
                  name:
                    description: |-
                      The name of the datastore cluster.
                      Name for the new storage pod.
                    type: string
                  sdrsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for storage DRS.
                    type: object
                    x-kubernetes-map-type: granular
                  sdrsAutomationLevel:
                    description: |-
                      The global automation level for all
                      virtual machines in this datastore cluster. Default: manual.
                      The default automation level for all virtual machines in this storage cluster.
                    type: string
                  sdrsDefaultIntraVmAffinity:
                    description: |-
                      When true, all disks in a
                      single virtual machine will be kept on the same datastore. Default: true.
                      When true, storage DRS keeps VMDKs for individual VMs on the same datastore by default.
                    type: boolean
                  sdrsEnabled:
                    description: |-
                      Enable Storage DRS for this datastore cluster.
                      Default: false.
                      Enable storage DRS for this datastore cluster.
                    type: boolean
                  sdrsFreeSpaceThreshold:
                    description: |-
                      The threshold, in GB, that storage
                      DRS uses to make decisions to migrate VMs out of a datastore. Default: 50
                      GB.
                      The threshold, in GB, that storage DRS uses to make decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsFreeSpaceThresholdMode:
                    description: The free space threshold to use. When set to utilization,
                      drs_space_utilization_threshold is used, and when set to freeSpace,
                      drs_free_space_threshold is used.
                    type: string
                  sdrsFreeSpaceUtilizationDifference:
                    description: |-
                      The threshold, in
                      percent of used space, that storage DRS uses to make decisions to migrate VMs
                      out of a datastore. Default: 80 percent.
                      The threshold, in percent, of difference between space utilization in datastores before storage DRS makes decisions to balance the space.
                    type: number
                  sdrsIoBalanceAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting I/O load imbalances.
                      Overrides the default automation settings when correcting I/O load imbalances.
                    type: string
                  sdrsIoLatencyThreshold:
                    description: |-
                      The I/O latency threshold, in
                      milliseconds, that storage DRS uses to make recommendations to move disks
                      from this datastore. Default: 15 seconds.
                      The I/O latency threshold, in milliseconds, that storage DRS uses to make recommendations to move disks from this datastore.
                    type: number
                  sdrsIoLoadBalanceEnabled:
                    description: |-
                      Enable I/O load balancing for
                      this datastore cluster. Default: true.
                      Enable I/O load balancing for this datastore cluster.
                    type: boolean
                  sdrsIoLoadImbalanceThreshold:
                    description: |-
                      The difference between load
                      in datastores in the cluster before storage DRS makes recommendations to
                      balance the load. Default: 5 percent.
                      The difference between load in datastores in the cluster before storage DRS makes recommendations to balance the load.
                    type: number
                  sdrsIoReservableIopsThreshold:
                    description: |-
                      The threshold of reservable
                      IOPS of all virtual machines on the datastore before storage DRS makes
                      recommendations to move VMs off of a datastore. Note that this setting should
                      only be set if sdrs_io_reservable_percent_threshold cannot make an accurate
                      estimate of the capacity of the datastores in your cluster, and should be set
                      to roughly 50-60% of the worst case peak performance of the backing LUNs.
                      The threshold of reservable IOPS of all virtual machines on the datastore before storage DRS makes recommendations to move VMs off of a datastore.
                    type: number
                  sdrsIoReservablePercentThreshold:
                    description: |-
                      The threshold, in
                      percent, of actual estimated performance of the datastore (in IOPS) that
                      storage DRS uses to make recommendations to move VMs off of a datastore when
                      the total reservable IOPS exceeds the threshold. Default: 60 percent.
                      The threshold, in percent, of actual estimated performance of the datastore (in IOPS) that storage DRS uses to make recommendations to move VMs off of a datastore when the total reservable IOPS exceeds the threshold.
                    type: number
                  sdrsIoReservableThresholdMode:
                    description: |-
                      The reservable IOPS
                      threshold setting to use, sdrs_io_reservable_percent_threshold in the event
                      of automatic, or sdrs_io_reservable_iops_threshold in the event of
                      manual. Default: automatic.
                      The reservable IOPS threshold to use, percent in the event of automatic, or manual threshold in the event of manual.
                    type: string
                  sdrsLoadBalanceInterval:
                    description: |-
                      The storage DRS poll interval, in
                      minutes. Default: 480 minutes.
                      The storage DRS poll interval, in minutes.
                    type: number
                  sdrsPolicyEnforcementAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting storage and VM policy violations.
                      Overrides the default automation settings when correcting storage and VM policy violations.
                    type: string
                  sdrsRuleEnforcementAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting affinity rule violations.
                      Overrides the default automation settings when correcting affinity rule violations.
                    type: string
                  sdrsSpaceBalanceAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting disk space imbalances.
                      Overrides the default automation settings when correcting disk space imbalances.
                    type: string
                  sdrsSpaceUtilizationThreshold:
                    description: |-
                      Runtime thresholds govern
                      when Storage DRS performs or recommends migrations
                      (based on the selected automation level). Default: 80 percent.
                      The threshold, in percent of used space, that storage DRS uses to make decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsVmEvacuationAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when generating recommendations for datastore evacuation.
                      Overrides the default automation settings when generating recommendations for datastore evacuation.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of custom attribute ids to attribute
                      value strings to set for the datastore cluster. See
                      here for a reference on how to set values
                      for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datacenterId:
                    description: |-
                      The managed object ID of
                      the datacenter to create the datastore cluster in. Forces a new resource if
                      changed.
                      The managed object ID of the datacenter to put the datastore cluster in.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this datastore
                      cluster in.  This is a path relative to the datacenter you are deploying the
                      datastore to.
                      The name of the folder to locate the datastore cluster in.
                    type: string
                  name:
                    description: |-
                      The name of the datastore cluster.
                      Name for the new storage pod.
                    type: string
                  sdrsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for storage DRS.
                    type: object
                    x-kubernetes-map-type: granular
                  sdrsAutomationLevel:
                    description: |-
                      The global automation level for all
                      virtual machines in this datastore cluster. Default: manual.
                      The default automation level for all virtual machines in this storage cluster.
                    type: string
                  sdrsDefaultIntraVmAffinity:
                    description: |-
                      When true, all disks in a
                      single virtual machine will be kept on the same datastore. Default: true.
                      When true, storage DRS keeps VMDKs for individual VMs on the same datastore by default.
                    type: boolean
                  sdrsEnabled:
                    description: |-
                      Enable Storage DRS for this datastore cluster.
                      Default: false.
                      Enable storage DRS for this datastore cluster.
                    type: boolean
                  sdrsFreeSpaceThreshold:
                    description: |-
                      The threshold, in GB, that storage
                      DRS uses to make decisions to migrate VMs out of a datastore. Default: 50
                      GB.
                      The threshold, in GB, that storage DRS uses to make decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsFreeSpaceThresholdMode:
                    description: The free space threshold to use. When set to utilization,
                      drs_space_utilization_threshold is used, and when set to freeSpace,
                      drs_free_space_threshold is used.
                    type: string
                  sdrsFreeSpaceUtilizationDifference:
                    description: |-
                      The threshold, in
                      percent of used space, that storage DRS uses to make decisions to migrate VMs
                      out of a datastore. Default: 80 percent.
                      The threshold, in percent, of difference between space utilization in datastores before storage DRS makes decisions to balance the space.
                    type: number
                  sdrsIoBalanceAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting I/O load imbalances.
                      Overrides the default automation settings when correcting I/O load imbalances.
                    type: string
                  sdrsIoLatencyThreshold:
                    description: |-
                      The I/O latency threshold, in
                      milliseconds, that storage DRS uses to make recommendations to move disks
                      from this datastore. Default: 15 seconds.
                      The I/O latency threshold, in milliseconds, that storage DRS uses to make recommendations to move disks from this datastore.
                    type: number
                  sdrsIoLoadBalanceEnabled:
                    description: |-
                      Enable I/O load balancing for
                      this datastore cluster. Default: true.
                      Enable I/O load balancing for this datastore cluster.
                    type: boolean
                  sdrsIoLoadImbalanceThreshold:
                    description: |-
                      The difference between load
                      in datastores in the cluster before storage DRS makes recommendations to
                      balance the load. Default: 5 percent.
                      The difference between load in datastores in the cluster before storage DRS makes recommendations to balance the load.
                    type: number
                  sdrsIoReservableIopsThreshold:
                    description: |-
                      The threshold of reservable
                      IOPS of all virtual machines on the datastore before storage DRS makes
                      recommendations to move VMs off of a datastore. Note that this setting should
                      only be set if sdrs_io_reservable_percent_threshold cannot make an accurate
                      estimate of the capacity of the datastores in your cluster, and should be set
                      to roughly 50-60% of the worst case peak performance of the backing LUNs.
                      The threshold of reservable IOPS of all virtual machines on the datastore before storage DRS makes recommendations to move VMs off of a datastore.
                    type: number
                  sdrsIoReservablePercentThreshold:
                    description: |-
                      The threshold, in
                      percent, of actual estimated performance of the datastore (in IOPS) that
                      storage DRS uses to make recommendations to move VMs off of a datastore when
                      the total reservable IOPS exceeds the threshold. Default: 60 percent.
                      The threshold, in percent, of actual estimated performance of the datastore (in IOPS) that storage DRS uses to make recommendations to move VMs off of a datastore when the total reservable IOPS exceeds the threshold.
                    type: number
                  sdrsIoReservableThresholdMode:
                    description: |-
                      The reservable IOPS
                      threshold setting to use, sdrs_io_reservable_percent_threshold in the event
                      of automatic, or sdrs_io_reservable_iops_threshold in the event of
                      manual. Default: automatic.
                      The reservable IOPS threshold to use, percent in the event of automatic, or manual threshold in the event of manual.
                    type: string
                  sdrsLoadBalanceInterval:
                    description: |-
                      The storage DRS poll interval, in
                      minutes. Default: 480 minutes.
                      The storage DRS poll interval, in minutes.
                    type: number
                  sdrsPolicyEnforcementAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting storage and VM policy violations.
                      Overrides the default automation settings when correcting storage and VM policy violations.
                    type: string
                  sdrsRuleEnforcementAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting affinity rule violations.
                      Overrides the default automation settings when correcting affinity rule violations.
                    type: string
                  sdrsSpaceBalanceAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting disk space imbalances.
                      Overrides the default automation settings when correcting disk space imbalances.
                    type: string
                  sdrsSpaceUtilizationThreshold:
                    description: |-
                      Runtime thresholds govern
                      when Storage DRS performs or recommends migrations
                      (based on the selected automation level). Default: 80 percent.
                      The threshold, in percent of used space, that storage DRS uses to make decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsVmEvacuationAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when generating recommendations for datastore evacuation.
                      Overrides the default automation settings when generating recommendations for datastore evacuation.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.datacenterId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.datacenterId)
                || (has(self.initProvider) && has(self.initProvider.datacenterId))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: VSphereDatastoreClusterStatus defines the observed state
              of VSphereDatastoreCluster.
            properties:
              atProvider:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of custom attribute ids to attribute
                      value strings to set for the datastore cluster. See
                      here for a reference on how to set values
                      for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datacenterId:
                    description: |-
                      The managed object ID of
                      the datacenter to create the datastore cluster in. Forces a new resource if
                      changed.
                      The managed object ID of the datacenter to put the datastore cluster in.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this datastore
                      cluster in.  This is a path relative to the datacenter you are deploying the
                      datastore to.
                      The name of the folder to locate the datastore cluster in.
                    type: string
                  id:
                    type: string
                  name:
                    description: |-
                      The name of the datastore cluster.
                      Name for the new storage pod.
                    type: string
                  sdrsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: Advanced configuration options for storage DRS.
                    type: object
                    x-kubernetes-map-type: granular
                  sdrsAutomationLevel:
                    description: |-
                      The global automation level for all
                      virtual machines in this datastore cluster. Default: manual.
                      The default automation level for all virtual machines in this storage cluster.
                    type: string
                  sdrsDefaultIntraVmAffinity:
                    description: |-
                      When true, all disks in a
                      single virtual machine will be kept on the same datastore. Default: true.
                      When true, storage DRS keeps VMDKs for individual VMs on the same datastore by default.
                    type: boolean
                  sdrsEnabled:
                    description: |-
                      Enable Storage DRS for this datastore cluster.
                      Default: false.
                      Enable storage DRS for this datastore cluster.
                    type: boolean
                  sdrsFreeSpaceThreshold:
                    description: |-
                      The threshold, in GB, that storage
                      DRS uses to make decisions to migrate VMs out of a datastore. Default: 50
                      GB.
                      The threshold, in GB, that storage DRS uses to make decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsFreeSpaceThresholdMode:
                    description: The free space threshold to use. When set to utilization,
                      drs_space_utilization_threshold is used, and when set to freeSpace,
                      drs_free_space_threshold is used.
                    type: string
                  sdrsFreeSpaceUtilizationDifference:
                    description: |-
                      The threshold, in
                      percent of used space, that storage DRS uses to make decisions to migrate VMs
                      out of a datastore. Default: 80 percent.
                      The threshold, in percent, of difference between space utilization in datastores before storage DRS makes decisions to balance the space.
                    type: number
                  sdrsIoBalanceAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting I/O load imbalances.
                      Overrides the default automation settings when correcting I/O load imbalances.
                    type: string
                  sdrsIoLatencyThreshold:
                    description: |-
                      The I/O latency threshold, in
                      milliseconds, that storage DRS uses to make recommendations to move disks
                      from this datastore. Default: 15 seconds.
                      The I/O latency threshold, in milliseconds, that storage DRS uses to make recommendations to move disks from this datastore.
                    type: number
                  sdrsIoLoadBalanceEnabled:
                    description: |-
                      Enable I/O load balancing for
                      this datastore cluster. Default: true.
                      Enable I/O load balancing for this datastore cluster.
                    type: boolean
                  sdrsIoLoadImbalanceThreshold:
                    description: |-
                      The difference between load
                      in datastores in the cluster before storage DRS makes recommendations to
                      balance the load. Default: 5 percent.
                      The difference between load in datastores in the cluster before storage DRS makes recommendations to balance the load.
                    type: number
                  sdrsIoReservableIopsThreshold:
                    description: |-
                      The threshold of reservable
                      IOPS of all virtual machines on the datastore before storage DRS makes
                      recommendations to move VMs off of a datastore. Note that this setting should
                      only be set if sdrs_io_reservable_percent_threshold cannot make an accurate
                      estimate of the capacity of the datastores in your cluster, and should be set
                      to roughly 50-60% of the worst case peak performance of the backing LUNs.
                      The threshold of reservable IOPS of all virtual machines on the datastore before storage DRS makes recommendations to move VMs off of a datastore.
                    type: number
                  sdrsIoReservablePercentThreshold:
                    description: |-
                      The threshold, in
                      percent, of actual estimated performance of the datastore (in IOPS) that
                      storage DRS uses to make recommendations to move VMs off of a datastore when
                      the total reservable IOPS exceeds the threshold. Default: 60 percent.
                      The threshold, in percent, of actual estimated performance of the datastore (in IOPS) that storage DRS uses to make recommendations to move VMs off of a datastore when the total reservable IOPS exceeds the threshold.
                    type: number
                  sdrsIoReservableThresholdMode:
                    description: |-
                      The reservable IOPS
                      threshold setting to use, sdrs_io_reservable_percent_threshold in the event
                      of automatic, or sdrs_io_reservable_iops_threshold in the event of
                      manual. Default: automatic.
                      The reservable IOPS threshold to use, percent in the event of automatic, or manual threshold in the event of manual.
                    type: string
                  sdrsLoadBalanceInterval:
                    description: |-
                      The storage DRS poll interval, in
                      minutes. Default: 480 minutes.
                      The storage DRS poll interval, in minutes.
                    type: number
                  sdrsPolicyEnforcementAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting storage and VM policy violations.
                      Overrides the default automation settings when correcting storage and VM policy violations.
                    type: string
                  sdrsRuleEnforcementAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting affinity rule violations.
                      Overrides the default automation settings when correcting affinity rule violations.
                    type: string
                  sdrsSpaceBalanceAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when correcting disk space imbalances.
                      Overrides the default automation settings when correcting disk space imbalances.
                    type: string
                  sdrsSpaceUtilizationThreshold:
                    description: |-
                      Runtime thresholds govern
                      when Storage DRS performs or recommends migrations
                      (based on the selected automation level). Default: 80 percent.
                      The threshold, in percent of used space, that storage DRS uses to make decisions to migrate VMs out of a datastore.
                    type: number
                  sdrsVmEvacuationAutomationLevel:
                    description: |-
                      Overrides the default
                      automation settings when generating recommendations for datastore evacuation.
                      Overrides the default automation settings when generating recommendations for datastore evacuation.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
