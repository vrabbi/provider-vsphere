---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vspherecomputeclusters.hostandclustermanagement.terasky.labs
spec:
  group: hostandclustermanagement.terasky.labs
  names:
    categories:
    - crossplane
    - managed
    - vsphere
    kind: VSphereComputeCluster
    listKind: VSphereComputeClusterList
    plural: vspherecomputeclusters
    singular: vspherecomputecluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VSphereComputeCluster is the Schema for the VSphereComputeClusters
          API. Provides a vSphere cluster resource. This can be used to create and
          manage clusters of hosts.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VSphereComputeClusterSpec defines the desired state of VSphereComputeCluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of custom attribute ids to attribute
                      value strings to set for the datastore cluster. See
                      here for a reference on how to set values
                      for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datacenterId:
                    description: |-
                      The managed object ID of
                      the datacenter to create the cluster in. Forces a new resource if changed.
                      The managed object ID of the datacenter to put the cluster in.
                    type: string
                  dpmAutomationLevel:
                    description: |-
                      The automation level for host power
                      operations in this cluster. Can be one of manual or automated. Default:
                      manual.
                      The automation level for host power operations in this cluster. Can be one of manual or automated.
                    type: string
                  dpmEnabled:
                    description: |-
                      Enable DPM support for DRS in this cluster.
                      Requires drs_enabled to be true in order to be effective.
                      Default: false.
                      Enable DPM support for DRS. This allows you to dynamically control the power of hosts depending on the needs of virtual machines in the cluster. Requires that DRS be enabled.
                    type: boolean
                  dpmThreshold:
                    description: |-
                      A value between 1 and 5 indicating the
                      threshold of load within the cluster that influences host power operations.
                      This affects both power on and power off operations - a lower setting will
                      tolerate more of a surplus/deficit than a higher setting. Default: 3.
                      A value between 1 and 5 indicating the threshold of load within the cluster that influences host power operations. This affects both power on and power off operations - a lower setting will tolerate more of a surplus/deficit than a higher setting.
                    type: number
                  drsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: |-
                      A key/value map that specifies advanced
                      options for DRS and DPM.
                      Advanced configuration options for DRS and DPM.
                    type: object
                    x-kubernetes-map-type: granular
                  drsAutomationLevel:
                    description: |-
                      The default automation level for all
                      virtual machines in this cluster. Can be one of manual,
                      partiallyAutomated, or fullyAutomated. Default: manual.
                      The default automation level for all virtual machines in this cluster. Can be one of manual, partiallyAutomated, or fullyAutomated.
                    type: string
                  drsEnablePredictiveDrs:
                    description: |-
                      When true, enables DRS to use data
                      from VMware Aria Operations to make proactive DRS
                      recommendations. *
                      When true, enables DRS to use data from vRealize Operations Manager to make proactive DRS recommendations.
                    type: boolean
                  drsEnableVmOverrides:
                    description: |-
                      Allow individual DRS overrides to be
                      set for virtual machines in the cluster. Default: true.
                      When true, allows individual VM overrides within this cluster to be set.
                    type: boolean
                  drsEnabled:
                    description: |-
                      Enable DRS for this cluster. Default: false.
                      Enable DRS for this cluster.
                    type: boolean
                  drsMigrationThreshold:
                    description: |-
                      A value between 1 and 5 indicating
                      the threshold of imbalance tolerated between hosts. A lower setting will
                      tolerate more imbalance while a higher setting will tolerate less. Default:
                      3.
                      A value between 1 and 5 indicating the threshold of imbalance tolerated between hosts. A lower setting will tolerate more imbalance while a higher setting will tolerate less.
                    type: number
                  drsScaleDescendantsShares:
                    description: |-
                      Enable scalable shares for all
                      resource pools in the cluster. Can be one of disabled or
                      scaleCpuAndMemoryShares. Default: disabled.
                      Enable scalable shares for all descendants of this cluster.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this cluster in.
                      This is a path relative to the datacenter you are deploying the cluster to.
                      The name of the folder to locate the cluster in.
                    type: string
                  forceEvacuateOnDestroy:
                    description: |-
                      When destroying the resource, setting this to
                      true will auto-remove any hosts that are currently a member of the cluster,
                      as if they were removed by taking their entry out of host_system_ids (see
                      below). This is an advanced
                      option and should only be used for testing. Default: false.
                      Force removal of all hosts in the cluster during destroy and make them standalone hosts. Use of this flag mainly exists for testing and is not recommended in normal use.
                    type: boolean
                  haAdmissionControlFailoverHostSystemIds:
                    description: |-
                      Defines the
                      managed object IDs of hosts to use as dedicated failover
                      hosts. These hosts are kept as available as possible - admission control will
                      block access to the host, and DRS will ignore the host when making
                      recommendations.
                      When ha_admission_control_policy is failoverHosts, this defines the managed object IDs of hosts to use as dedicated failover hosts. These hosts are kept as available as possible - admission control will block access to the host, and DRS will ignore the host when making recommendations.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  haAdmissionControlHostFailureTolerance:
                    description: |-
                      The maximum number
                      of failed hosts that admission control tolerates when making decisions on
                      whether to permit virtual machine operations. The maximum is one less than
                      the number of hosts in the cluster. Default: 1.
                      *
                      The maximum number of failed hosts that admission control tolerates when making decisions on whether to permit virtual machine operations. The maximum is one less than the number of hosts in the cluster.
                    type: number
                  haAdmissionControlPerformanceTolerance:
                    description: |-
                      The percentage of
                      resource reduction that a cluster of virtual machines can tolerate in case of
                      a failover. A value of 0 produces warnings only, whereas a value of 100
                      disables the setting. Default: 100 (disabled).
                      The percentage of resource reduction that a cluster of VMs can tolerate in case of a failover. A value of 0 produces warnings only, whereas a value of 100 disables the setting.
                    type: number
                  haAdmissionControlPolicy:
                    description: |-
                      The type of admission control
                      policy to use with vSphere HA. Can be one of resourcePercentage,
                      slotPolicy, failoverHosts, or disabled. Default: resourcePercentage.
                      The type of admission control policy to use with vSphere HA, which controls whether or not specific VM operations are permitted in the cluster in order to protect the reliability of the cluster. Can be one of resourcePercentage, slotPolicy, failoverHosts, or disabled. Note that disabling admission control is not recommended and can lead to service issues.
                    type: string
                  haAdmissionControlResourcePercentageAutoCompute:
                    description: |-
                      Automatically determine available resource percentages by subtracting the
                      average number of host resources represented by the
                      ha_admission_control_host_failure_tolerance
                      setting from the total amount of resources in the cluster. Disable to supply
                      user-defined values. Default: true.
                      *
                      When ha_admission_control_policy is resourcePercentage, automatically determine available resource percentages by subtracting the average number of host resources represented by the ha_admission_control_host_failure_tolerance setting from the total amount of resources in the cluster. Disable to supply user-defined values.
                    type: boolean
                  haAdmissionControlResourcePercentageCpu:
                    description: |-
                      Controls the
                      user-defined percentage of CPU resources in the cluster to reserve for
                      failover. Default: 100.
                      When ha_admission_control_policy is resourcePercentage, this controls the user-defined percentage of CPU resources in the cluster to reserve for failover.
                    type: number
                  haAdmissionControlResourcePercentageMemory:
                    description: |-
                      Controls the
                      user-defined percentage of memory resources in the cluster to reserve for
                      failover. Default: 100.
                      When ha_admission_control_policy is resourcePercentage, this controls the user-defined percentage of memory resources in the cluster to reserve for failover.
                    type: number
                  haAdmissionControlSlotPolicyExplicitCpu:
                    description: |-
                      Controls the
                      user-defined CPU slot size, in MHz. Default: 32.
                      When ha_admission_control_policy is slotPolicy, this controls the user-defined CPU slot size, in MHz.
                    type: number
                  haAdmissionControlSlotPolicyExplicitMemory:
                    description: |-
                      Controls the
                      user-defined memory slot size, in MB. Default: 100.
                      When ha_admission_control_policy is slotPolicy, this controls the user-defined memory slot size, in MB.
                    type: number
                  haAdmissionControlSlotPolicyUseExplicitSize:
                    description: |-
                      Controls
                      whether or not you wish to supply explicit values to CPU and memory slot
                      sizes. The default is false, which tells vSphere to gather a automatic
                      average based on all powered-on virtual machines currently in the cluster.
                      When ha_admission_control_policy is slotPolicy, this setting controls whether or not you wish to supply explicit values to CPU and memory slot sizes. The default is to gather a automatic average based on all powered-on virtual machines currently in the cluster.
                    type: boolean
                  haAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: |-
                      A key/value map that specifies advanced
                      options for vSphere HA.
                      Advanced configuration options for vSphere HA.
                    type: object
                    x-kubernetes-map-type: granular
                  haDatastoreApdRecoveryAction:
                    description: |-
                      Controls the action to take
                      on virtual machines if an APD status on an affected datastore clears in the
                      middle of an APD event. Can be one of none or reset. Default: none.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines if an APD status on an affected datastore clears in the middle of an APD event. Can be one of none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: |-
                      Controls the action to take on
                      virtual machines when the cluster has detected loss to all paths to a
                      relevant datastore. Can be one of disabled, warning,
                      restartConservative, or restartAggressive.  Default: disabled.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines when the cluster has detected loss to all paths to a relevant datastore. Can be one of disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: |-
                      The time, in seconds,
                      to wait after an APD timeout event to run the response action defined in
                      ha_datastore_apd_response. Default: 180
                      seconds (3 minutes). *
                      When ha_vm_component_protection is enabled, controls the delay in seconds to wait after an APD timeout event to execute the response action defined in ha_datastore_apd_response.
                    type: number
                  haDatastorePdlResponse:
                    description: |-
                      Controls the action to take on
                      virtual machines when the cluster has detected a permanent device loss to a
                      relevant datastore. Can be one of disabled, warning, or
                      restartAggressive. Default: disabled.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines when the cluster has detected a permanent device loss to a relevant datastore. Can be one of disabled, warning, or restartAggressive.
                    type: string
                  haEnabled:
                    description: |-
                      Enable vSphere HA for this cluster. Default:
                      false.
                      Enable vSphere HA for this cluster.
                    type: boolean
                  haHeartbeatDatastoreIds:
                    description: |-
                      The list of managed object IDs for
                      preferred datastores to use for HA heartbeats. This setting is only useful
                      when ha_heartbeat_datastore_policy is set
                      to either userSelectedDs or allFeasibleDsWithUserPreference.
                      The list of managed object IDs for preferred datastores to use for HA heartbeating. This setting is only useful when ha_heartbeat_datastore_policy is set to either userSelectedDs or allFeasibleDsWithUserPreference.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  haHeartbeatDatastorePolicy:
                    description: |-
                      The selection policy for HA
                      heartbeat datastores. Can be one of allFeasibleDs, userSelectedDs, or
                      allFeasibleDsWithUserPreference. Default:
                      allFeasibleDsWithUserPreference.
                      The selection policy for HA heartbeat datastores. Can be one of allFeasibleDs, userSelectedDs, or allFeasibleDsWithUserPreference.
                    type: string
                  haHostIsolationResponse:
                    description: |-
                      The action to take on virtual
                      machines when a host has detected that it has been isolated from the rest of
                      the cluster. Can be one of none, powerOff, or shutdown. Default:
                      none.
                      The action to take on virtual machines when a host has detected that it has been isolated from the rest of the cluster. Can be one of none, powerOff, or shutdown.
                    type: string
                  haHostMonitoring:
                    description: |-
                      Global setting that controls whether
                      vSphere HA remediates virtual machines on host failure. Can be one of enabled
                      or disabled. Default: enabled.
                      Global setting that controls whether vSphere HA remediates VMs on host failure. Can be one of enabled or disabled.
                    type: string
                  haVmComponentProtection:
                    description: |-
                      Controls vSphere VM component
                      protection for virtual machines in this cluster. Can be one of enabled or
                      disabled. Default: enabled.
                      *
                      Controls vSphere VM component protection for virtual machines in this cluster. This allows vSphere HA to react to failures between hosts and specific virtual machine components, such as datastores. Can be one of enabled or disabled.
                    type: string
                  haVmDependencyRestartCondition:
                    description: |-
                      The condition used to
                      determine whether or not virtual machines in a certain restart priority class
                      are online, allowing HA to move on to restarting virtual machines on the next
                      priority. Can be one of none, poweredOn, guestHbStatusGreen, or
                      appHbStatusGreen. The default is none, which means that a virtual machine
                      is considered ready immediately after a host is found to start it on.
                      *
                      The condition used to determine whether or not VMs in a certain restart priority class are online, allowing HA to move on to restarting VMs on the next priority. Can be one of none, poweredOn, guestHbStatusGreen, or appHbStatusGreen.
                    type: string
                  haVmFailureInterval:
                    description: |-
                      The time interval, in seconds, a heartbeat
                      from a virtual machine is not received within this configured interval,
                      the virtual machine is marked as failed. Default: 30 seconds.
                      If a heartbeat from a virtual machine is not received within this configured interval, the virtual machine is marked as failed. The value is in seconds.
                    type: number
                  haVmMaximumFailureWindow:
                    description: |-
                      The time, in seconds, for the reset window in
                      which ha_vm_maximum_resets can operate. When this
                      window expires, no more resets are attempted regardless of the setting
                      configured in ha_vm_maximum_resets. -1 means no window, meaning an
                      unlimited reset time is allotted. Default: -1 (no window).
                      The length of the reset window in which ha_vm_maximum_resets can operate. When this window expires, no more resets are attempted regardless of the setting configured in ha_vm_maximum_resets. -1 means no window, meaning an unlimited reset time is allotted.
                    type: number
                  haVmMaximumResets:
                    description: |-
                      The maximum number of resets that HA will
                      perform to a virtual machine when responding to a failure event. Default: 3
                      The maximum number of resets that HA will perform to a virtual machine when responding to a failure event.
                    type: number
                  haVmMinimumUptime:
                    description: |-
                      The time, in seconds, that HA waits after
                      powering on a virtual machine before monitoring for heartbeats. Default:
                      120 seconds (2 minutes).
                      The time, in seconds, that HA waits after powering on a virtual machine before monitoring for heartbeats.
                    type: number
                  haVmMonitoring:
                    description: |-
                      The type of virtual machine monitoring to use
                      when HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring. Default: vmMonitoringDisabled.
                      The type of virtual machine monitoring to use when HA is enabled in the cluster. Can be one of vmMonitoringDisabled, vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmRestartAdditionalDelay:
                    description: |-
                      Additional delay, in seconds,
                      after ready condition is met. A VM is considered ready at this point.
                      Default: 0 seconds (no delay). *
                      Additional delay in seconds after ready condition is met. A VM is considered ready at this point.
                    type: number
                  haVmRestartPriority:
                    description: |-
                      The default restart priority
                      for affected virtual machines when vSphere detects a host failure. Can be one
                      of lowest, low, medium, high, or highest. Default: medium.
                      The default restart priority for affected VMs when vSphere detects a host failure. Can be one of lowest, low, medium, high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: |-
                      The maximum time, in seconds,
                      that vSphere HA will wait for virtual machines in one priority to be ready
                      before proceeding with the next priority. Default: 600 seconds (10 minutes).
                      *
                      The maximum time, in seconds, that vSphere HA will wait for virtual machines in one priority to be ready before proceeding with the next priority.
                    type: number
                  hostClusterExitTimeout:
                    description: |-
                      The timeout, in seconds, for each host maintenance
                      mode operation when removing hosts from a cluster. Default: 3600 seconds (1 hour).
                      The timeout for each host maintenance mode operation when removing hosts from a cluster.
                    type: number
                  hostImage:
                    description: |-
                      Enables vLCM on the cluster and applies an ESXi image with the provided configuration.
                      Details about the host image which should be applied to the cluster.
                    items:
                      properties:
                        component:
                          description: |-
                            A custom component to add to the base image. TODO - add link to offline depot resource docs
                            List of custom components.
                          items:
                            properties:
                              key:
                                description: |-
                                  The identifier of the component
                                  The identifier for the component.
                                type: string
                              version:
                                description: |-
                                  The version of the component
                                  The version to use.
                                type: string
                            type: object
                          type: array
                        esxVersion:
                          description: |-
                            The ESXi version which will be used as a base for the image. See host_base_images.
                            The ESXi version which the image is based on.
                          type: string
                      type: object
                    type: array
                  hostManaged:
                    description: |-
                      Can be set to true if compute cluster
                      membership will be managed through the host resource rather than the
                      compute_cluster resource. Conflicts with: host_system_ids.
                      Must be set if cluster enrollment is managed from host resource.
                    type: boolean
                  hostSystemIds:
                    description: |-
                      The managed object IDs of
                      the hosts to put in the cluster. Conflicts with: host_managed.
                      The managed object IDs of the hosts to put in the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      The name of the cluster.
                      Name for the new cluster.
                    type: string
                  proactiveHaAutomationLevel:
                    description: |-
                      Determines how the host
                      quarantine, maintenance mode, or virtual machine migration recommendations
                      made by proactive HA are to be handled. Can be one of Automated or
                      Manual. Default: Manual. *
                      The DRS behavior for proactive HA recommendations. Can be one of Automated or Manual.
                    type: string
                  proactiveHaEnabled:
                    description: |-
                      Enables Proactive HA. Default: false.
                      *
                      Enables proactive HA, allowing for vSphere to get HA data from external providers and use DRS to perform remediation.
                    type: boolean
                  proactiveHaModerateRemediation:
                    description: |-
                      The configured remediation
                      for moderately degraded hosts. Can be one of MaintenanceMode or
                      QuarantineMode. Note that this cannot be set to MaintenanceMode when
                      proactive_ha_severe_remediation is set
                      to QuarantineMode. Default: QuarantineMode.
                      *
                      The configured remediation for moderately degraded hosts. Can be one of MaintenanceMode or QuarantineMode. Note that this cannot be set to MaintenanceMode when proactive_ha_severe_remediation is set to QuarantineMode.
                    type: string
                  proactiveHaProviderIds:
                    description: |-
                      The list of IDs for health update
                      providers configured for this cluster.
                      *
                      The list of IDs for health update providers configured for this cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  proactiveHaSevereRemediation:
                    description: |-
                      The configured remediation for
                      severely degraded hosts. Can be one of MaintenanceMode or QuarantineMode.
                      Note that this cannot be set to QuarantineMode when
                      proactive_ha_moderate_remediation is
                      set to MaintenanceMode. Default: QuarantineMode.
                      *
                      The configured remediation for severely degraded hosts. Can be one of MaintenanceMode or QuarantineMode. Note that this cannot be set to QuarantineMode when proactive_ha_moderate_remediation is set to MaintenanceMode.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  vsanCompressionEnabled:
                    description: |-
                      Enables vSAN compression on the
                      cluster.
                      Whether the vSAN compression service is enabled for the cluster.
                    type: boolean
                  vsanDedupEnabled:
                    description: |-
                      Enables vSAN deduplication on the cluster.
                      Cannot be independently set to true. When vSAN deduplication is enabled, vSAN
                      compression must also be enabled.
                      Whether the vSAN deduplication service is enabled for the cluster.
                    type: boolean
                  vsanDiskGroup:
                    description: |-
                      Represents the configuration of a host disk
                      group in the cluster.
                      A list of disk UUIDs to add to the vSAN cluster.
                    items:
                      properties:
                        cache:
                          description: |-
                            The canonical name of the disk to use for vSAN cache.
                            Cache disk.
                          type: string
                        storage:
                          description: |-
                            An array of disk canonical names for vSAN storage.
                            List of storage disks.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  vsanDitEncryptionEnabled:
                    description: |-
                      Enables vSAN data-in-transit
                      encryption on the cluster. Conflicts with vsan_remote_datastore_ids, i.e.,
                      vSAN data-in-transit feature cannot be enabled with the vSAN HCI Mesh feature
                      at the same time.
                      Whether the vSAN data-in-transit encryption is enabled for the cluster.
                    type: boolean
                  vsanDitRekeyInterval:
                    description: |-
                      Indicates the rekey interval in
                      minutes for data-in-transit encryption. The valid rekey interval is 30 to
                      10800 (feature defaults to 1440). Conflicts with vsan_remote_datastore_ids.
                      When vsan_dit_encryption_enabled is enabled, sets the rekey interval of data-in-transit encryption (in minutes).
                    type: number
                  vsanEnabled:
                    description: |-
                      Enables vSAN on the cluster.
                      Whether the vSAN service is enabled for the cluster.
                    type: boolean
                  vsanEsaEnabled:
                    description: |-
                      Enables vSAN ESA on the cluster.
                      Whether the vSAN ESA service is enabled for the cluster.
                    type: boolean
                  vsanFaultDomains:
                    description: |-
                      Configurations of vSAN fault domains.
                      The configuration for vSAN fault domains.
                    items:
                      properties:
                        faultDomain:
                          description: |-
                            The configuration for single fault domain.
                            The configuration for single fault domain.
                          items:
                            properties:
                              hostIds:
                                description: |-
                                  The managed object IDs of the hosts to put in the fault domain.
                                  The managed object IDs of the hosts to put in the fault domain.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              name:
                                description: |-
                                  The name of the cluster.
                                  The name of fault domain.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  vsanNetworkDiagnosticModeEnabled:
                    description: |-
                      Enables network
                      diagnostic mode for vSAN performance service on the cluster.
                      Whether the vSAN network diagnostic mode is enabled for the cluster.
                    type: boolean
                  vsanPerformanceEnabled:
                    description: |-
                      Enables vSAN performance service on
                      the cluster. Default: true.
                      Whether the vSAN performance service is enabled for the cluster.
                    type: boolean
                  vsanRemoteDatastoreIds:
                    description: |-
                      The remote vSAN datastore IDs to be
                      mounted to this cluster. Conflicts with vsan_dit_encryption_enabled and
                      vsan_dit_rekey_interval, i.e., vSAN HCI Mesh feature cannot be enabled with
                      data-in-transit encryption feature at the same time.
                      The managed object IDs of the vSAN datastore to be mounted on the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  vsanStretchedCluster:
                    description: |-
                      Configurations of vSAN stretched cluster.
                      The configuration for stretched cluster.
                    items:
                      properties:
                        preferredFaultDomainHostIds:
                          description: |-
                            The managed object IDs of the hosts to put in the first fault domain.
                            The managed object IDs of the hosts to put in the first fault domain.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        preferredFaultDomainName:
                          description: |-
                            The name of first fault domain. Default is Preferred.
                            The name of prepferred fault domain.
                          type: string
                        secondaryFaultDomainHostIds:
                          description: |-
                            The managed object IDs of the hosts to put in the second fault domain.
                            The managed object IDs of the hosts to put in the second fault domain.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        secondaryFaultDomainName:
                          description: |-
                            The name of second fault domain. Default is Secondary.
                            The name of secondary fault domain.
                          type: string
                        witnessNode:
                          description: |-
                            The managed object IDs of the host selected as witness node when enable stretched cluster.
                            The managed object IDs of the host selected as witness node when enable stretched cluster.
                          type: string
                      type: object
                    type: array
                  vsanUnmapEnabled:
                    description: |-
                      Enables vSAN unmap on the cluster.
                      You must explicitly enable vSAN unmap when you enable vSAN ESA on the cluster.
                      Whether the vSAN unmap service is enabled for the cluster.
                    type: boolean
                  vsanVerboseModeEnabled:
                    description: |-
                      Enables verbose mode for vSAN
                      performance service on the cluster.
                      Whether the vSAN verbose mode is enabled for the cluster.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of custom attribute ids to attribute
                      value strings to set for the datastore cluster. See
                      here for a reference on how to set values
                      for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datacenterId:
                    description: |-
                      The managed object ID of
                      the datacenter to create the cluster in. Forces a new resource if changed.
                      The managed object ID of the datacenter to put the cluster in.
                    type: string
                  dpmAutomationLevel:
                    description: |-
                      The automation level for host power
                      operations in this cluster. Can be one of manual or automated. Default:
                      manual.
                      The automation level for host power operations in this cluster. Can be one of manual or automated.
                    type: string
                  dpmEnabled:
                    description: |-
                      Enable DPM support for DRS in this cluster.
                      Requires drs_enabled to be true in order to be effective.
                      Default: false.
                      Enable DPM support for DRS. This allows you to dynamically control the power of hosts depending on the needs of virtual machines in the cluster. Requires that DRS be enabled.
                    type: boolean
                  dpmThreshold:
                    description: |-
                      A value between 1 and 5 indicating the
                      threshold of load within the cluster that influences host power operations.
                      This affects both power on and power off operations - a lower setting will
                      tolerate more of a surplus/deficit than a higher setting. Default: 3.
                      A value between 1 and 5 indicating the threshold of load within the cluster that influences host power operations. This affects both power on and power off operations - a lower setting will tolerate more of a surplus/deficit than a higher setting.
                    type: number
                  drsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: |-
                      A key/value map that specifies advanced
                      options for DRS and DPM.
                      Advanced configuration options for DRS and DPM.
                    type: object
                    x-kubernetes-map-type: granular
                  drsAutomationLevel:
                    description: |-
                      The default automation level for all
                      virtual machines in this cluster. Can be one of manual,
                      partiallyAutomated, or fullyAutomated. Default: manual.
                      The default automation level for all virtual machines in this cluster. Can be one of manual, partiallyAutomated, or fullyAutomated.
                    type: string
                  drsEnablePredictiveDrs:
                    description: |-
                      When true, enables DRS to use data
                      from VMware Aria Operations to make proactive DRS
                      recommendations. *
                      When true, enables DRS to use data from vRealize Operations Manager to make proactive DRS recommendations.
                    type: boolean
                  drsEnableVmOverrides:
                    description: |-
                      Allow individual DRS overrides to be
                      set for virtual machines in the cluster. Default: true.
                      When true, allows individual VM overrides within this cluster to be set.
                    type: boolean
                  drsEnabled:
                    description: |-
                      Enable DRS for this cluster. Default: false.
                      Enable DRS for this cluster.
                    type: boolean
                  drsMigrationThreshold:
                    description: |-
                      A value between 1 and 5 indicating
                      the threshold of imbalance tolerated between hosts. A lower setting will
                      tolerate more imbalance while a higher setting will tolerate less. Default:
                      3.
                      A value between 1 and 5 indicating the threshold of imbalance tolerated between hosts. A lower setting will tolerate more imbalance while a higher setting will tolerate less.
                    type: number
                  drsScaleDescendantsShares:
                    description: |-
                      Enable scalable shares for all
                      resource pools in the cluster. Can be one of disabled or
                      scaleCpuAndMemoryShares. Default: disabled.
                      Enable scalable shares for all descendants of this cluster.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this cluster in.
                      This is a path relative to the datacenter you are deploying the cluster to.
                      The name of the folder to locate the cluster in.
                    type: string
                  forceEvacuateOnDestroy:
                    description: |-
                      When destroying the resource, setting this to
                      true will auto-remove any hosts that are currently a member of the cluster,
                      as if they were removed by taking their entry out of host_system_ids (see
                      below). This is an advanced
                      option and should only be used for testing. Default: false.
                      Force removal of all hosts in the cluster during destroy and make them standalone hosts. Use of this flag mainly exists for testing and is not recommended in normal use.
                    type: boolean
                  haAdmissionControlFailoverHostSystemIds:
                    description: |-
                      Defines the
                      managed object IDs of hosts to use as dedicated failover
                      hosts. These hosts are kept as available as possible - admission control will
                      block access to the host, and DRS will ignore the host when making
                      recommendations.
                      When ha_admission_control_policy is failoverHosts, this defines the managed object IDs of hosts to use as dedicated failover hosts. These hosts are kept as available as possible - admission control will block access to the host, and DRS will ignore the host when making recommendations.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  haAdmissionControlHostFailureTolerance:
                    description: |-
                      The maximum number
                      of failed hosts that admission control tolerates when making decisions on
                      whether to permit virtual machine operations. The maximum is one less than
                      the number of hosts in the cluster. Default: 1.
                      *
                      The maximum number of failed hosts that admission control tolerates when making decisions on whether to permit virtual machine operations. The maximum is one less than the number of hosts in the cluster.
                    type: number
                  haAdmissionControlPerformanceTolerance:
                    description: |-
                      The percentage of
                      resource reduction that a cluster of virtual machines can tolerate in case of
                      a failover. A value of 0 produces warnings only, whereas a value of 100
                      disables the setting. Default: 100 (disabled).
                      The percentage of resource reduction that a cluster of VMs can tolerate in case of a failover. A value of 0 produces warnings only, whereas a value of 100 disables the setting.
                    type: number
                  haAdmissionControlPolicy:
                    description: |-
                      The type of admission control
                      policy to use with vSphere HA. Can be one of resourcePercentage,
                      slotPolicy, failoverHosts, or disabled. Default: resourcePercentage.
                      The type of admission control policy to use with vSphere HA, which controls whether or not specific VM operations are permitted in the cluster in order to protect the reliability of the cluster. Can be one of resourcePercentage, slotPolicy, failoverHosts, or disabled. Note that disabling admission control is not recommended and can lead to service issues.
                    type: string
                  haAdmissionControlResourcePercentageAutoCompute:
                    description: |-
                      Automatically determine available resource percentages by subtracting the
                      average number of host resources represented by the
                      ha_admission_control_host_failure_tolerance
                      setting from the total amount of resources in the cluster. Disable to supply
                      user-defined values. Default: true.
                      *
                      When ha_admission_control_policy is resourcePercentage, automatically determine available resource percentages by subtracting the average number of host resources represented by the ha_admission_control_host_failure_tolerance setting from the total amount of resources in the cluster. Disable to supply user-defined values.
                    type: boolean
                  haAdmissionControlResourcePercentageCpu:
                    description: |-
                      Controls the
                      user-defined percentage of CPU resources in the cluster to reserve for
                      failover. Default: 100.
                      When ha_admission_control_policy is resourcePercentage, this controls the user-defined percentage of CPU resources in the cluster to reserve for failover.
                    type: number
                  haAdmissionControlResourcePercentageMemory:
                    description: |-
                      Controls the
                      user-defined percentage of memory resources in the cluster to reserve for
                      failover. Default: 100.
                      When ha_admission_control_policy is resourcePercentage, this controls the user-defined percentage of memory resources in the cluster to reserve for failover.
                    type: number
                  haAdmissionControlSlotPolicyExplicitCpu:
                    description: |-
                      Controls the
                      user-defined CPU slot size, in MHz. Default: 32.
                      When ha_admission_control_policy is slotPolicy, this controls the user-defined CPU slot size, in MHz.
                    type: number
                  haAdmissionControlSlotPolicyExplicitMemory:
                    description: |-
                      Controls the
                      user-defined memory slot size, in MB. Default: 100.
                      When ha_admission_control_policy is slotPolicy, this controls the user-defined memory slot size, in MB.
                    type: number
                  haAdmissionControlSlotPolicyUseExplicitSize:
                    description: |-
                      Controls
                      whether or not you wish to supply explicit values to CPU and memory slot
                      sizes. The default is false, which tells vSphere to gather a automatic
                      average based on all powered-on virtual machines currently in the cluster.
                      When ha_admission_control_policy is slotPolicy, this setting controls whether or not you wish to supply explicit values to CPU and memory slot sizes. The default is to gather a automatic average based on all powered-on virtual machines currently in the cluster.
                    type: boolean
                  haAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: |-
                      A key/value map that specifies advanced
                      options for vSphere HA.
                      Advanced configuration options for vSphere HA.
                    type: object
                    x-kubernetes-map-type: granular
                  haDatastoreApdRecoveryAction:
                    description: |-
                      Controls the action to take
                      on virtual machines if an APD status on an affected datastore clears in the
                      middle of an APD event. Can be one of none or reset. Default: none.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines if an APD status on an affected datastore clears in the middle of an APD event. Can be one of none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: |-
                      Controls the action to take on
                      virtual machines when the cluster has detected loss to all paths to a
                      relevant datastore. Can be one of disabled, warning,
                      restartConservative, or restartAggressive.  Default: disabled.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines when the cluster has detected loss to all paths to a relevant datastore. Can be one of disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: |-
                      The time, in seconds,
                      to wait after an APD timeout event to run the response action defined in
                      ha_datastore_apd_response. Default: 180
                      seconds (3 minutes). *
                      When ha_vm_component_protection is enabled, controls the delay in seconds to wait after an APD timeout event to execute the response action defined in ha_datastore_apd_response.
                    type: number
                  haDatastorePdlResponse:
                    description: |-
                      Controls the action to take on
                      virtual machines when the cluster has detected a permanent device loss to a
                      relevant datastore. Can be one of disabled, warning, or
                      restartAggressive. Default: disabled.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines when the cluster has detected a permanent device loss to a relevant datastore. Can be one of disabled, warning, or restartAggressive.
                    type: string
                  haEnabled:
                    description: |-
                      Enable vSphere HA for this cluster. Default:
                      false.
                      Enable vSphere HA for this cluster.
                    type: boolean
                  haHeartbeatDatastoreIds:
                    description: |-
                      The list of managed object IDs for
                      preferred datastores to use for HA heartbeats. This setting is only useful
                      when ha_heartbeat_datastore_policy is set
                      to either userSelectedDs or allFeasibleDsWithUserPreference.
                      The list of managed object IDs for preferred datastores to use for HA heartbeating. This setting is only useful when ha_heartbeat_datastore_policy is set to either userSelectedDs or allFeasibleDsWithUserPreference.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  haHeartbeatDatastorePolicy:
                    description: |-
                      The selection policy for HA
                      heartbeat datastores. Can be one of allFeasibleDs, userSelectedDs, or
                      allFeasibleDsWithUserPreference. Default:
                      allFeasibleDsWithUserPreference.
                      The selection policy for HA heartbeat datastores. Can be one of allFeasibleDs, userSelectedDs, or allFeasibleDsWithUserPreference.
                    type: string
                  haHostIsolationResponse:
                    description: |-
                      The action to take on virtual
                      machines when a host has detected that it has been isolated from the rest of
                      the cluster. Can be one of none, powerOff, or shutdown. Default:
                      none.
                      The action to take on virtual machines when a host has detected that it has been isolated from the rest of the cluster. Can be one of none, powerOff, or shutdown.
                    type: string
                  haHostMonitoring:
                    description: |-
                      Global setting that controls whether
                      vSphere HA remediates virtual machines on host failure. Can be one of enabled
                      or disabled. Default: enabled.
                      Global setting that controls whether vSphere HA remediates VMs on host failure. Can be one of enabled or disabled.
                    type: string
                  haVmComponentProtection:
                    description: |-
                      Controls vSphere VM component
                      protection for virtual machines in this cluster. Can be one of enabled or
                      disabled. Default: enabled.
                      *
                      Controls vSphere VM component protection for virtual machines in this cluster. This allows vSphere HA to react to failures between hosts and specific virtual machine components, such as datastores. Can be one of enabled or disabled.
                    type: string
                  haVmDependencyRestartCondition:
                    description: |-
                      The condition used to
                      determine whether or not virtual machines in a certain restart priority class
                      are online, allowing HA to move on to restarting virtual machines on the next
                      priority. Can be one of none, poweredOn, guestHbStatusGreen, or
                      appHbStatusGreen. The default is none, which means that a virtual machine
                      is considered ready immediately after a host is found to start it on.
                      *
                      The condition used to determine whether or not VMs in a certain restart priority class are online, allowing HA to move on to restarting VMs on the next priority. Can be one of none, poweredOn, guestHbStatusGreen, or appHbStatusGreen.
                    type: string
                  haVmFailureInterval:
                    description: |-
                      The time interval, in seconds, a heartbeat
                      from a virtual machine is not received within this configured interval,
                      the virtual machine is marked as failed. Default: 30 seconds.
                      If a heartbeat from a virtual machine is not received within this configured interval, the virtual machine is marked as failed. The value is in seconds.
                    type: number
                  haVmMaximumFailureWindow:
                    description: |-
                      The time, in seconds, for the reset window in
                      which ha_vm_maximum_resets can operate. When this
                      window expires, no more resets are attempted regardless of the setting
                      configured in ha_vm_maximum_resets. -1 means no window, meaning an
                      unlimited reset time is allotted. Default: -1 (no window).
                      The length of the reset window in which ha_vm_maximum_resets can operate. When this window expires, no more resets are attempted regardless of the setting configured in ha_vm_maximum_resets. -1 means no window, meaning an unlimited reset time is allotted.
                    type: number
                  haVmMaximumResets:
                    description: |-
                      The maximum number of resets that HA will
                      perform to a virtual machine when responding to a failure event. Default: 3
                      The maximum number of resets that HA will perform to a virtual machine when responding to a failure event.
                    type: number
                  haVmMinimumUptime:
                    description: |-
                      The time, in seconds, that HA waits after
                      powering on a virtual machine before monitoring for heartbeats. Default:
                      120 seconds (2 minutes).
                      The time, in seconds, that HA waits after powering on a virtual machine before monitoring for heartbeats.
                    type: number
                  haVmMonitoring:
                    description: |-
                      The type of virtual machine monitoring to use
                      when HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring. Default: vmMonitoringDisabled.
                      The type of virtual machine monitoring to use when HA is enabled in the cluster. Can be one of vmMonitoringDisabled, vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmRestartAdditionalDelay:
                    description: |-
                      Additional delay, in seconds,
                      after ready condition is met. A VM is considered ready at this point.
                      Default: 0 seconds (no delay). *
                      Additional delay in seconds after ready condition is met. A VM is considered ready at this point.
                    type: number
                  haVmRestartPriority:
                    description: |-
                      The default restart priority
                      for affected virtual machines when vSphere detects a host failure. Can be one
                      of lowest, low, medium, high, or highest. Default: medium.
                      The default restart priority for affected VMs when vSphere detects a host failure. Can be one of lowest, low, medium, high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: |-
                      The maximum time, in seconds,
                      that vSphere HA will wait for virtual machines in one priority to be ready
                      before proceeding with the next priority. Default: 600 seconds (10 minutes).
                      *
                      The maximum time, in seconds, that vSphere HA will wait for virtual machines in one priority to be ready before proceeding with the next priority.
                    type: number
                  hostClusterExitTimeout:
                    description: |-
                      The timeout, in seconds, for each host maintenance
                      mode operation when removing hosts from a cluster. Default: 3600 seconds (1 hour).
                      The timeout for each host maintenance mode operation when removing hosts from a cluster.
                    type: number
                  hostImage:
                    description: |-
                      Enables vLCM on the cluster and applies an ESXi image with the provided configuration.
                      Details about the host image which should be applied to the cluster.
                    items:
                      properties:
                        component:
                          description: |-
                            A custom component to add to the base image. TODO - add link to offline depot resource docs
                            List of custom components.
                          items:
                            properties:
                              key:
                                description: |-
                                  The identifier of the component
                                  The identifier for the component.
                                type: string
                              version:
                                description: |-
                                  The version of the component
                                  The version to use.
                                type: string
                            type: object
                          type: array
                        esxVersion:
                          description: |-
                            The ESXi version which will be used as a base for the image. See host_base_images.
                            The ESXi version which the image is based on.
                          type: string
                      type: object
                    type: array
                  hostManaged:
                    description: |-
                      Can be set to true if compute cluster
                      membership will be managed through the host resource rather than the
                      compute_cluster resource. Conflicts with: host_system_ids.
                      Must be set if cluster enrollment is managed from host resource.
                    type: boolean
                  hostSystemIds:
                    description: |-
                      The managed object IDs of
                      the hosts to put in the cluster. Conflicts with: host_managed.
                      The managed object IDs of the hosts to put in the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  name:
                    description: |-
                      The name of the cluster.
                      Name for the new cluster.
                    type: string
                  proactiveHaAutomationLevel:
                    description: |-
                      Determines how the host
                      quarantine, maintenance mode, or virtual machine migration recommendations
                      made by proactive HA are to be handled. Can be one of Automated or
                      Manual. Default: Manual. *
                      The DRS behavior for proactive HA recommendations. Can be one of Automated or Manual.
                    type: string
                  proactiveHaEnabled:
                    description: |-
                      Enables Proactive HA. Default: false.
                      *
                      Enables proactive HA, allowing for vSphere to get HA data from external providers and use DRS to perform remediation.
                    type: boolean
                  proactiveHaModerateRemediation:
                    description: |-
                      The configured remediation
                      for moderately degraded hosts. Can be one of MaintenanceMode or
                      QuarantineMode. Note that this cannot be set to MaintenanceMode when
                      proactive_ha_severe_remediation is set
                      to QuarantineMode. Default: QuarantineMode.
                      *
                      The configured remediation for moderately degraded hosts. Can be one of MaintenanceMode or QuarantineMode. Note that this cannot be set to MaintenanceMode when proactive_ha_severe_remediation is set to QuarantineMode.
                    type: string
                  proactiveHaProviderIds:
                    description: |-
                      The list of IDs for health update
                      providers configured for this cluster.
                      *
                      The list of IDs for health update providers configured for this cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  proactiveHaSevereRemediation:
                    description: |-
                      The configured remediation for
                      severely degraded hosts. Can be one of MaintenanceMode or QuarantineMode.
                      Note that this cannot be set to QuarantineMode when
                      proactive_ha_moderate_remediation is
                      set to MaintenanceMode. Default: QuarantineMode.
                      *
                      The configured remediation for severely degraded hosts. Can be one of MaintenanceMode or QuarantineMode. Note that this cannot be set to QuarantineMode when proactive_ha_moderate_remediation is set to MaintenanceMode.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  vsanCompressionEnabled:
                    description: |-
                      Enables vSAN compression on the
                      cluster.
                      Whether the vSAN compression service is enabled for the cluster.
                    type: boolean
                  vsanDedupEnabled:
                    description: |-
                      Enables vSAN deduplication on the cluster.
                      Cannot be independently set to true. When vSAN deduplication is enabled, vSAN
                      compression must also be enabled.
                      Whether the vSAN deduplication service is enabled for the cluster.
                    type: boolean
                  vsanDiskGroup:
                    description: |-
                      Represents the configuration of a host disk
                      group in the cluster.
                      A list of disk UUIDs to add to the vSAN cluster.
                    items:
                      properties:
                        cache:
                          description: |-
                            The canonical name of the disk to use for vSAN cache.
                            Cache disk.
                          type: string
                        storage:
                          description: |-
                            An array of disk canonical names for vSAN storage.
                            List of storage disks.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  vsanDitEncryptionEnabled:
                    description: |-
                      Enables vSAN data-in-transit
                      encryption on the cluster. Conflicts with vsan_remote_datastore_ids, i.e.,
                      vSAN data-in-transit feature cannot be enabled with the vSAN HCI Mesh feature
                      at the same time.
                      Whether the vSAN data-in-transit encryption is enabled for the cluster.
                    type: boolean
                  vsanDitRekeyInterval:
                    description: |-
                      Indicates the rekey interval in
                      minutes for data-in-transit encryption. The valid rekey interval is 30 to
                      10800 (feature defaults to 1440). Conflicts with vsan_remote_datastore_ids.
                      When vsan_dit_encryption_enabled is enabled, sets the rekey interval of data-in-transit encryption (in minutes).
                    type: number
                  vsanEnabled:
                    description: |-
                      Enables vSAN on the cluster.
                      Whether the vSAN service is enabled for the cluster.
                    type: boolean
                  vsanEsaEnabled:
                    description: |-
                      Enables vSAN ESA on the cluster.
                      Whether the vSAN ESA service is enabled for the cluster.
                    type: boolean
                  vsanFaultDomains:
                    description: |-
                      Configurations of vSAN fault domains.
                      The configuration for vSAN fault domains.
                    items:
                      properties:
                        faultDomain:
                          description: |-
                            The configuration for single fault domain.
                            The configuration for single fault domain.
                          items:
                            properties:
                              hostIds:
                                description: |-
                                  The managed object IDs of the hosts to put in the fault domain.
                                  The managed object IDs of the hosts to put in the fault domain.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              name:
                                description: |-
                                  The name of the cluster.
                                  The name of fault domain.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  vsanNetworkDiagnosticModeEnabled:
                    description: |-
                      Enables network
                      diagnostic mode for vSAN performance service on the cluster.
                      Whether the vSAN network diagnostic mode is enabled for the cluster.
                    type: boolean
                  vsanPerformanceEnabled:
                    description: |-
                      Enables vSAN performance service on
                      the cluster. Default: true.
                      Whether the vSAN performance service is enabled for the cluster.
                    type: boolean
                  vsanRemoteDatastoreIds:
                    description: |-
                      The remote vSAN datastore IDs to be
                      mounted to this cluster. Conflicts with vsan_dit_encryption_enabled and
                      vsan_dit_rekey_interval, i.e., vSAN HCI Mesh feature cannot be enabled with
                      data-in-transit encryption feature at the same time.
                      The managed object IDs of the vSAN datastore to be mounted on the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  vsanStretchedCluster:
                    description: |-
                      Configurations of vSAN stretched cluster.
                      The configuration for stretched cluster.
                    items:
                      properties:
                        preferredFaultDomainHostIds:
                          description: |-
                            The managed object IDs of the hosts to put in the first fault domain.
                            The managed object IDs of the hosts to put in the first fault domain.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        preferredFaultDomainName:
                          description: |-
                            The name of first fault domain. Default is Preferred.
                            The name of prepferred fault domain.
                          type: string
                        secondaryFaultDomainHostIds:
                          description: |-
                            The managed object IDs of the hosts to put in the second fault domain.
                            The managed object IDs of the hosts to put in the second fault domain.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        secondaryFaultDomainName:
                          description: |-
                            The name of second fault domain. Default is Secondary.
                            The name of secondary fault domain.
                          type: string
                        witnessNode:
                          description: |-
                            The managed object IDs of the host selected as witness node when enable stretched cluster.
                            The managed object IDs of the host selected as witness node when enable stretched cluster.
                          type: string
                      type: object
                    type: array
                  vsanUnmapEnabled:
                    description: |-
                      Enables vSAN unmap on the cluster.
                      You must explicitly enable vSAN unmap when you enable vSAN ESA on the cluster.
                      Whether the vSAN unmap service is enabled for the cluster.
                    type: boolean
                  vsanVerboseModeEnabled:
                    description: |-
                      Enables verbose mode for vSAN
                      performance service on the cluster.
                      Whether the vSAN verbose mode is enabled for the cluster.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.datacenterId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.datacenterId)
                || (has(self.initProvider) && has(self.initProvider.datacenterId))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: VSphereComputeClusterStatus defines the observed state of
              VSphereComputeCluster.
            properties:
              atProvider:
                properties:
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of custom attribute ids to attribute
                      value strings to set for the datastore cluster. See
                      here for a reference on how to set values
                      for custom attributes.
                      A list of custom attributes to set on this resource.
                    type: object
                    x-kubernetes-map-type: granular
                  datacenterId:
                    description: |-
                      The managed object ID of
                      the datacenter to create the cluster in. Forces a new resource if changed.
                      The managed object ID of the datacenter to put the cluster in.
                    type: string
                  dpmAutomationLevel:
                    description: |-
                      The automation level for host power
                      operations in this cluster. Can be one of manual or automated. Default:
                      manual.
                      The automation level for host power operations in this cluster. Can be one of manual or automated.
                    type: string
                  dpmEnabled:
                    description: |-
                      Enable DPM support for DRS in this cluster.
                      Requires drs_enabled to be true in order to be effective.
                      Default: false.
                      Enable DPM support for DRS. This allows you to dynamically control the power of hosts depending on the needs of virtual machines in the cluster. Requires that DRS be enabled.
                    type: boolean
                  dpmThreshold:
                    description: |-
                      A value between 1 and 5 indicating the
                      threshold of load within the cluster that influences host power operations.
                      This affects both power on and power off operations - a lower setting will
                      tolerate more of a surplus/deficit than a higher setting. Default: 3.
                      A value between 1 and 5 indicating the threshold of load within the cluster that influences host power operations. This affects both power on and power off operations - a lower setting will tolerate more of a surplus/deficit than a higher setting.
                    type: number
                  drsAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: |-
                      A key/value map that specifies advanced
                      options for DRS and DPM.
                      Advanced configuration options for DRS and DPM.
                    type: object
                    x-kubernetes-map-type: granular
                  drsAutomationLevel:
                    description: |-
                      The default automation level for all
                      virtual machines in this cluster. Can be one of manual,
                      partiallyAutomated, or fullyAutomated. Default: manual.
                      The default automation level for all virtual machines in this cluster. Can be one of manual, partiallyAutomated, or fullyAutomated.
                    type: string
                  drsEnablePredictiveDrs:
                    description: |-
                      When true, enables DRS to use data
                      from VMware Aria Operations to make proactive DRS
                      recommendations. *
                      When true, enables DRS to use data from vRealize Operations Manager to make proactive DRS recommendations.
                    type: boolean
                  drsEnableVmOverrides:
                    description: |-
                      Allow individual DRS overrides to be
                      set for virtual machines in the cluster. Default: true.
                      When true, allows individual VM overrides within this cluster to be set.
                    type: boolean
                  drsEnabled:
                    description: |-
                      Enable DRS for this cluster. Default: false.
                      Enable DRS for this cluster.
                    type: boolean
                  drsMigrationThreshold:
                    description: |-
                      A value between 1 and 5 indicating
                      the threshold of imbalance tolerated between hosts. A lower setting will
                      tolerate more imbalance while a higher setting will tolerate less. Default:
                      3.
                      A value between 1 and 5 indicating the threshold of imbalance tolerated between hosts. A lower setting will tolerate more imbalance while a higher setting will tolerate less.
                    type: number
                  drsScaleDescendantsShares:
                    description: |-
                      Enable scalable shares for all
                      resource pools in the cluster. Can be one of disabled or
                      scaleCpuAndMemoryShares. Default: disabled.
                      Enable scalable shares for all descendants of this cluster.
                    type: string
                  folder:
                    description: |-
                      The relative path to a folder to put this cluster in.
                      This is a path relative to the datacenter you are deploying the cluster to.
                      The name of the folder to locate the cluster in.
                    type: string
                  forceEvacuateOnDestroy:
                    description: |-
                      When destroying the resource, setting this to
                      true will auto-remove any hosts that are currently a member of the cluster,
                      as if they were removed by taking their entry out of host_system_ids (see
                      below). This is an advanced
                      option and should only be used for testing. Default: false.
                      Force removal of all hosts in the cluster during destroy and make them standalone hosts. Use of this flag mainly exists for testing and is not recommended in normal use.
                    type: boolean
                  haAdmissionControlFailoverHostSystemIds:
                    description: |-
                      Defines the
                      managed object IDs of hosts to use as dedicated failover
                      hosts. These hosts are kept as available as possible - admission control will
                      block access to the host, and DRS will ignore the host when making
                      recommendations.
                      When ha_admission_control_policy is failoverHosts, this defines the managed object IDs of hosts to use as dedicated failover hosts. These hosts are kept as available as possible - admission control will block access to the host, and DRS will ignore the host when making recommendations.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  haAdmissionControlHostFailureTolerance:
                    description: |-
                      The maximum number
                      of failed hosts that admission control tolerates when making decisions on
                      whether to permit virtual machine operations. The maximum is one less than
                      the number of hosts in the cluster. Default: 1.
                      *
                      The maximum number of failed hosts that admission control tolerates when making decisions on whether to permit virtual machine operations. The maximum is one less than the number of hosts in the cluster.
                    type: number
                  haAdmissionControlPerformanceTolerance:
                    description: |-
                      The percentage of
                      resource reduction that a cluster of virtual machines can tolerate in case of
                      a failover. A value of 0 produces warnings only, whereas a value of 100
                      disables the setting. Default: 100 (disabled).
                      The percentage of resource reduction that a cluster of VMs can tolerate in case of a failover. A value of 0 produces warnings only, whereas a value of 100 disables the setting.
                    type: number
                  haAdmissionControlPolicy:
                    description: |-
                      The type of admission control
                      policy to use with vSphere HA. Can be one of resourcePercentage,
                      slotPolicy, failoverHosts, or disabled. Default: resourcePercentage.
                      The type of admission control policy to use with vSphere HA, which controls whether or not specific VM operations are permitted in the cluster in order to protect the reliability of the cluster. Can be one of resourcePercentage, slotPolicy, failoverHosts, or disabled. Note that disabling admission control is not recommended and can lead to service issues.
                    type: string
                  haAdmissionControlResourcePercentageAutoCompute:
                    description: |-
                      Automatically determine available resource percentages by subtracting the
                      average number of host resources represented by the
                      ha_admission_control_host_failure_tolerance
                      setting from the total amount of resources in the cluster. Disable to supply
                      user-defined values. Default: true.
                      *
                      When ha_admission_control_policy is resourcePercentage, automatically determine available resource percentages by subtracting the average number of host resources represented by the ha_admission_control_host_failure_tolerance setting from the total amount of resources in the cluster. Disable to supply user-defined values.
                    type: boolean
                  haAdmissionControlResourcePercentageCpu:
                    description: |-
                      Controls the
                      user-defined percentage of CPU resources in the cluster to reserve for
                      failover. Default: 100.
                      When ha_admission_control_policy is resourcePercentage, this controls the user-defined percentage of CPU resources in the cluster to reserve for failover.
                    type: number
                  haAdmissionControlResourcePercentageMemory:
                    description: |-
                      Controls the
                      user-defined percentage of memory resources in the cluster to reserve for
                      failover. Default: 100.
                      When ha_admission_control_policy is resourcePercentage, this controls the user-defined percentage of memory resources in the cluster to reserve for failover.
                    type: number
                  haAdmissionControlSlotPolicyExplicitCpu:
                    description: |-
                      Controls the
                      user-defined CPU slot size, in MHz. Default: 32.
                      When ha_admission_control_policy is slotPolicy, this controls the user-defined CPU slot size, in MHz.
                    type: number
                  haAdmissionControlSlotPolicyExplicitMemory:
                    description: |-
                      Controls the
                      user-defined memory slot size, in MB. Default: 100.
                      When ha_admission_control_policy is slotPolicy, this controls the user-defined memory slot size, in MB.
                    type: number
                  haAdmissionControlSlotPolicyUseExplicitSize:
                    description: |-
                      Controls
                      whether or not you wish to supply explicit values to CPU and memory slot
                      sizes. The default is false, which tells vSphere to gather a automatic
                      average based on all powered-on virtual machines currently in the cluster.
                      When ha_admission_control_policy is slotPolicy, this setting controls whether or not you wish to supply explicit values to CPU and memory slot sizes. The default is to gather a automatic average based on all powered-on virtual machines currently in the cluster.
                    type: boolean
                  haAdvancedOptions:
                    additionalProperties:
                      type: string
                    description: |-
                      A key/value map that specifies advanced
                      options for vSphere HA.
                      Advanced configuration options for vSphere HA.
                    type: object
                    x-kubernetes-map-type: granular
                  haDatastoreApdRecoveryAction:
                    description: |-
                      Controls the action to take
                      on virtual machines if an APD status on an affected datastore clears in the
                      middle of an APD event. Can be one of none or reset. Default: none.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines if an APD status on an affected datastore clears in the middle of an APD event. Can be one of none or reset.
                    type: string
                  haDatastoreApdResponse:
                    description: |-
                      Controls the action to take on
                      virtual machines when the cluster has detected loss to all paths to a
                      relevant datastore. Can be one of disabled, warning,
                      restartConservative, or restartAggressive.  Default: disabled.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines when the cluster has detected loss to all paths to a relevant datastore. Can be one of disabled, warning, restartConservative, or restartAggressive.
                    type: string
                  haDatastoreApdResponseDelay:
                    description: |-
                      The time, in seconds,
                      to wait after an APD timeout event to run the response action defined in
                      ha_datastore_apd_response. Default: 180
                      seconds (3 minutes). *
                      When ha_vm_component_protection is enabled, controls the delay in seconds to wait after an APD timeout event to execute the response action defined in ha_datastore_apd_response.
                    type: number
                  haDatastorePdlResponse:
                    description: |-
                      Controls the action to take on
                      virtual machines when the cluster has detected a permanent device loss to a
                      relevant datastore. Can be one of disabled, warning, or
                      restartAggressive. Default: disabled.
                      *
                      When ha_vm_component_protection is enabled, controls the action to take on virtual machines when the cluster has detected a permanent device loss to a relevant datastore. Can be one of disabled, warning, or restartAggressive.
                    type: string
                  haEnabled:
                    description: |-
                      Enable vSphere HA for this cluster. Default:
                      false.
                      Enable vSphere HA for this cluster.
                    type: boolean
                  haHeartbeatDatastoreIds:
                    description: |-
                      The list of managed object IDs for
                      preferred datastores to use for HA heartbeats. This setting is only useful
                      when ha_heartbeat_datastore_policy is set
                      to either userSelectedDs or allFeasibleDsWithUserPreference.
                      The list of managed object IDs for preferred datastores to use for HA heartbeating. This setting is only useful when ha_heartbeat_datastore_policy is set to either userSelectedDs or allFeasibleDsWithUserPreference.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  haHeartbeatDatastorePolicy:
                    description: |-
                      The selection policy for HA
                      heartbeat datastores. Can be one of allFeasibleDs, userSelectedDs, or
                      allFeasibleDsWithUserPreference. Default:
                      allFeasibleDsWithUserPreference.
                      The selection policy for HA heartbeat datastores. Can be one of allFeasibleDs, userSelectedDs, or allFeasibleDsWithUserPreference.
                    type: string
                  haHostIsolationResponse:
                    description: |-
                      The action to take on virtual
                      machines when a host has detected that it has been isolated from the rest of
                      the cluster. Can be one of none, powerOff, or shutdown. Default:
                      none.
                      The action to take on virtual machines when a host has detected that it has been isolated from the rest of the cluster. Can be one of none, powerOff, or shutdown.
                    type: string
                  haHostMonitoring:
                    description: |-
                      Global setting that controls whether
                      vSphere HA remediates virtual machines on host failure. Can be one of enabled
                      or disabled. Default: enabled.
                      Global setting that controls whether vSphere HA remediates VMs on host failure. Can be one of enabled or disabled.
                    type: string
                  haVmComponentProtection:
                    description: |-
                      Controls vSphere VM component
                      protection for virtual machines in this cluster. Can be one of enabled or
                      disabled. Default: enabled.
                      *
                      Controls vSphere VM component protection for virtual machines in this cluster. This allows vSphere HA to react to failures between hosts and specific virtual machine components, such as datastores. Can be one of enabled or disabled.
                    type: string
                  haVmDependencyRestartCondition:
                    description: |-
                      The condition used to
                      determine whether or not virtual machines in a certain restart priority class
                      are online, allowing HA to move on to restarting virtual machines on the next
                      priority. Can be one of none, poweredOn, guestHbStatusGreen, or
                      appHbStatusGreen. The default is none, which means that a virtual machine
                      is considered ready immediately after a host is found to start it on.
                      *
                      The condition used to determine whether or not VMs in a certain restart priority class are online, allowing HA to move on to restarting VMs on the next priority. Can be one of none, poweredOn, guestHbStatusGreen, or appHbStatusGreen.
                    type: string
                  haVmFailureInterval:
                    description: |-
                      The time interval, in seconds, a heartbeat
                      from a virtual machine is not received within this configured interval,
                      the virtual machine is marked as failed. Default: 30 seconds.
                      If a heartbeat from a virtual machine is not received within this configured interval, the virtual machine is marked as failed. The value is in seconds.
                    type: number
                  haVmMaximumFailureWindow:
                    description: |-
                      The time, in seconds, for the reset window in
                      which ha_vm_maximum_resets can operate. When this
                      window expires, no more resets are attempted regardless of the setting
                      configured in ha_vm_maximum_resets. -1 means no window, meaning an
                      unlimited reset time is allotted. Default: -1 (no window).
                      The length of the reset window in which ha_vm_maximum_resets can operate. When this window expires, no more resets are attempted regardless of the setting configured in ha_vm_maximum_resets. -1 means no window, meaning an unlimited reset time is allotted.
                    type: number
                  haVmMaximumResets:
                    description: |-
                      The maximum number of resets that HA will
                      perform to a virtual machine when responding to a failure event. Default: 3
                      The maximum number of resets that HA will perform to a virtual machine when responding to a failure event.
                    type: number
                  haVmMinimumUptime:
                    description: |-
                      The time, in seconds, that HA waits after
                      powering on a virtual machine before monitoring for heartbeats. Default:
                      120 seconds (2 minutes).
                      The time, in seconds, that HA waits after powering on a virtual machine before monitoring for heartbeats.
                    type: number
                  haVmMonitoring:
                    description: |-
                      The type of virtual machine monitoring to use
                      when HA is enabled in the cluster. Can be one of vmMonitoringDisabled,
                      vmMonitoringOnly, or vmAndAppMonitoring. Default: vmMonitoringDisabled.
                      The type of virtual machine monitoring to use when HA is enabled in the cluster. Can be one of vmMonitoringDisabled, vmMonitoringOnly, or vmAndAppMonitoring.
                    type: string
                  haVmRestartAdditionalDelay:
                    description: |-
                      Additional delay, in seconds,
                      after ready condition is met. A VM is considered ready at this point.
                      Default: 0 seconds (no delay). *
                      Additional delay in seconds after ready condition is met. A VM is considered ready at this point.
                    type: number
                  haVmRestartPriority:
                    description: |-
                      The default restart priority
                      for affected virtual machines when vSphere detects a host failure. Can be one
                      of lowest, low, medium, high, or highest. Default: medium.
                      The default restart priority for affected VMs when vSphere detects a host failure. Can be one of lowest, low, medium, high, or highest.
                    type: string
                  haVmRestartTimeout:
                    description: |-
                      The maximum time, in seconds,
                      that vSphere HA will wait for virtual machines in one priority to be ready
                      before proceeding with the next priority. Default: 600 seconds (10 minutes).
                      *
                      The maximum time, in seconds, that vSphere HA will wait for virtual machines in one priority to be ready before proceeding with the next priority.
                    type: number
                  hostClusterExitTimeout:
                    description: |-
                      The timeout, in seconds, for each host maintenance
                      mode operation when removing hosts from a cluster. Default: 3600 seconds (1 hour).
                      The timeout for each host maintenance mode operation when removing hosts from a cluster.
                    type: number
                  hostImage:
                    description: |-
                      Enables vLCM on the cluster and applies an ESXi image with the provided configuration.
                      Details about the host image which should be applied to the cluster.
                    items:
                      properties:
                        component:
                          description: |-
                            A custom component to add to the base image. TODO - add link to offline depot resource docs
                            List of custom components.
                          items:
                            properties:
                              key:
                                description: |-
                                  The identifier of the component
                                  The identifier for the component.
                                type: string
                              version:
                                description: |-
                                  The version of the component
                                  The version to use.
                                type: string
                            type: object
                          type: array
                        esxVersion:
                          description: |-
                            The ESXi version which will be used as a base for the image. See host_base_images.
                            The ESXi version which the image is based on.
                          type: string
                      type: object
                    type: array
                  hostManaged:
                    description: |-
                      Can be set to true if compute cluster
                      membership will be managed through the host resource rather than the
                      compute_cluster resource. Conflicts with: host_system_ids.
                      Must be set if cluster enrollment is managed from host resource.
                    type: boolean
                  hostSystemIds:
                    description: |-
                      The managed object IDs of
                      the hosts to put in the cluster. Conflicts with: host_managed.
                      The managed object IDs of the hosts to put in the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    description: ': The managed object ID of the cluster.'
                    type: string
                  name:
                    description: |-
                      The name of the cluster.
                      Name for the new cluster.
                    type: string
                  proactiveHaAutomationLevel:
                    description: |-
                      Determines how the host
                      quarantine, maintenance mode, or virtual machine migration recommendations
                      made by proactive HA are to be handled. Can be one of Automated or
                      Manual. Default: Manual. *
                      The DRS behavior for proactive HA recommendations. Can be one of Automated or Manual.
                    type: string
                  proactiveHaEnabled:
                    description: |-
                      Enables Proactive HA. Default: false.
                      *
                      Enables proactive HA, allowing for vSphere to get HA data from external providers and use DRS to perform remediation.
                    type: boolean
                  proactiveHaModerateRemediation:
                    description: |-
                      The configured remediation
                      for moderately degraded hosts. Can be one of MaintenanceMode or
                      QuarantineMode. Note that this cannot be set to MaintenanceMode when
                      proactive_ha_severe_remediation is set
                      to QuarantineMode. Default: QuarantineMode.
                      *
                      The configured remediation for moderately degraded hosts. Can be one of MaintenanceMode or QuarantineMode. Note that this cannot be set to MaintenanceMode when proactive_ha_severe_remediation is set to QuarantineMode.
                    type: string
                  proactiveHaProviderIds:
                    description: |-
                      The list of IDs for health update
                      providers configured for this cluster.
                      *
                      The list of IDs for health update providers configured for this cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  proactiveHaSevereRemediation:
                    description: |-
                      The configured remediation for
                      severely degraded hosts. Can be one of MaintenanceMode or QuarantineMode.
                      Note that this cannot be set to QuarantineMode when
                      proactive_ha_moderate_remediation is
                      set to MaintenanceMode. Default: QuarantineMode.
                      *
                      The configured remediation for severely degraded hosts. Can be one of MaintenanceMode or QuarantineMode. Note that this cannot be set to QuarantineMode when proactive_ha_moderate_remediation is set to MaintenanceMode.
                    type: string
                  resourcePoolId:
                    description: |-
                      The managed object ID of the primary
                      resource pool for this cluster. This can be passed directly to the
                      resource_pool_id
                      attribute of the
                      vsphere_virtual_machine resource.
                      The managed object ID of the cluster's root resource pool.
                    type: string
                  tags:
                    description: |-
                      The IDs of any tags to attach to this resource. See
                      here for a reference on how to apply tags.
                      A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  vsanCompressionEnabled:
                    description: |-
                      Enables vSAN compression on the
                      cluster.
                      Whether the vSAN compression service is enabled for the cluster.
                    type: boolean
                  vsanDedupEnabled:
                    description: |-
                      Enables vSAN deduplication on the cluster.
                      Cannot be independently set to true. When vSAN deduplication is enabled, vSAN
                      compression must also be enabled.
                      Whether the vSAN deduplication service is enabled for the cluster.
                    type: boolean
                  vsanDiskGroup:
                    description: |-
                      Represents the configuration of a host disk
                      group in the cluster.
                      A list of disk UUIDs to add to the vSAN cluster.
                    items:
                      properties:
                        cache:
                          description: |-
                            The canonical name of the disk to use for vSAN cache.
                            Cache disk.
                          type: string
                        storage:
                          description: |-
                            An array of disk canonical names for vSAN storage.
                            List of storage disks.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  vsanDitEncryptionEnabled:
                    description: |-
                      Enables vSAN data-in-transit
                      encryption on the cluster. Conflicts with vsan_remote_datastore_ids, i.e.,
                      vSAN data-in-transit feature cannot be enabled with the vSAN HCI Mesh feature
                      at the same time.
                      Whether the vSAN data-in-transit encryption is enabled for the cluster.
                    type: boolean
                  vsanDitRekeyInterval:
                    description: |-
                      Indicates the rekey interval in
                      minutes for data-in-transit encryption. The valid rekey interval is 30 to
                      10800 (feature defaults to 1440). Conflicts with vsan_remote_datastore_ids.
                      When vsan_dit_encryption_enabled is enabled, sets the rekey interval of data-in-transit encryption (in minutes).
                    type: number
                  vsanEnabled:
                    description: |-
                      Enables vSAN on the cluster.
                      Whether the vSAN service is enabled for the cluster.
                    type: boolean
                  vsanEsaEnabled:
                    description: |-
                      Enables vSAN ESA on the cluster.
                      Whether the vSAN ESA service is enabled for the cluster.
                    type: boolean
                  vsanFaultDomains:
                    description: |-
                      Configurations of vSAN fault domains.
                      The configuration for vSAN fault domains.
                    items:
                      properties:
                        faultDomain:
                          description: |-
                            The configuration for single fault domain.
                            The configuration for single fault domain.
                          items:
                            properties:
                              hostIds:
                                description: |-
                                  The managed object IDs of the hosts to put in the fault domain.
                                  The managed object IDs of the hosts to put in the fault domain.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              name:
                                description: |-
                                  The name of the cluster.
                                  The name of fault domain.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  vsanNetworkDiagnosticModeEnabled:
                    description: |-
                      Enables network
                      diagnostic mode for vSAN performance service on the cluster.
                      Whether the vSAN network diagnostic mode is enabled for the cluster.
                    type: boolean
                  vsanPerformanceEnabled:
                    description: |-
                      Enables vSAN performance service on
                      the cluster. Default: true.
                      Whether the vSAN performance service is enabled for the cluster.
                    type: boolean
                  vsanRemoteDatastoreIds:
                    description: |-
                      The remote vSAN datastore IDs to be
                      mounted to this cluster. Conflicts with vsan_dit_encryption_enabled and
                      vsan_dit_rekey_interval, i.e., vSAN HCI Mesh feature cannot be enabled with
                      data-in-transit encryption feature at the same time.
                      The managed object IDs of the vSAN datastore to be mounted on the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  vsanStretchedCluster:
                    description: |-
                      Configurations of vSAN stretched cluster.
                      The configuration for stretched cluster.
                    items:
                      properties:
                        preferredFaultDomainHostIds:
                          description: |-
                            The managed object IDs of the hosts to put in the first fault domain.
                            The managed object IDs of the hosts to put in the first fault domain.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        preferredFaultDomainName:
                          description: |-
                            The name of first fault domain. Default is Preferred.
                            The name of prepferred fault domain.
                          type: string
                        secondaryFaultDomainHostIds:
                          description: |-
                            The managed object IDs of the hosts to put in the second fault domain.
                            The managed object IDs of the hosts to put in the second fault domain.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        secondaryFaultDomainName:
                          description: |-
                            The name of second fault domain. Default is Secondary.
                            The name of secondary fault domain.
                          type: string
                        witnessNode:
                          description: |-
                            The managed object IDs of the host selected as witness node when enable stretched cluster.
                            The managed object IDs of the host selected as witness node when enable stretched cluster.
                          type: string
                      type: object
                    type: array
                  vsanUnmapEnabled:
                    description: |-
                      Enables vSAN unmap on the cluster.
                      You must explicitly enable vSAN unmap when you enable vSAN ESA on the cluster.
                      Whether the vSAN unmap service is enabled for the cluster.
                    type: boolean
                  vsanVerboseModeEnabled:
                    description: |-
                      Enables verbose mode for vSAN
                      performance service on the cluster.
                      Whether the vSAN verbose mode is enabled for the cluster.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
